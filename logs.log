2025-09-14 19:19:42,731:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 19:22:57,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 19:22:57,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 19:22:57,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 19:22:57,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 19:23:18,510:INFO:PyCaret RegressionExperiment
2025-09-14 19:23:18,511:INFO:Logging name: reg-default-name
2025-09-14 19:23:18,511:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-14 19:23:18,511:INFO:version 3.3.2
2025-09-14 19:23:18,511:INFO:Initializing setup()
2025-09-14 19:23:18,511:INFO:self.USI: 21e3
2025-09-14 19:23:18,511:INFO:self._variable_keys: {'html_param', 'fold_groups_param', 'fold_generator', 'seed', 'logging_param', 'exp_id', 'exp_name_log', 'target_param', 'X_test', 'idx', 'gpu_param', 'pipeline', 'USI', 'gpu_n_jobs_param', 'data', 'y_train', '_available_plots', 'memory', 'transform_target_param', 'n_jobs_param', 'log_plots_param', 'X_train', 'y', 'X', 'y_test', 'fold_shuffle_param', '_ml_usecase'}
2025-09-14 19:23:18,511:INFO:Checking environment
2025-09-14 19:23:18,511:INFO:python_version: 3.11.9
2025-09-14 19:23:18,511:INFO:python_build: ('main', 'Apr 19 2024 18:34:54')
2025-09-14 19:23:18,511:INFO:machine: arm64
2025-09-14 19:23:18,511:INFO:platform: macOS-15.6.1-arm64-arm-64bit
2025-09-14 19:23:18,511:INFO:Memory: svmem(total=8589934592, available=1717616640, percent=80.0, used=2993307648, free=115884032, active=1609154560, inactive=1599209472, wired=1384153088)
2025-09-14 19:23:18,511:INFO:Physical Core: 8
2025-09-14 19:23:18,511:INFO:Logical Core: 8
2025-09-14 19:23:18,511:INFO:Checking libraries
2025-09-14 19:23:18,511:INFO:System:
2025-09-14 19:23:18,511:INFO:    python: 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:34:54) [Clang 16.0.6 ]
2025-09-14 19:23:18,512:INFO:executable: /opt/miniconda3/envs/odzeraai/bin/python
2025-09-14 19:23:18,512:INFO:   machine: macOS-15.6.1-arm64-arm-64bit
2025-09-14 19:23:18,512:INFO:PyCaret required dependencies:
2025-09-14 19:23:18,589:INFO:                 pip: 25.2
2025-09-14 19:23:18,589:INFO:          setuptools: 78.1.1
2025-09-14 19:23:18,589:INFO:             pycaret: 3.3.2
2025-09-14 19:23:18,589:INFO:             IPython: 9.5.0
2025-09-14 19:23:18,589:INFO:          ipywidgets: 8.1.7
2025-09-14 19:23:18,589:INFO:                tqdm: 4.67.1
2025-09-14 19:23:18,589:INFO:               numpy: 1.26.4
2025-09-14 19:23:18,589:INFO:              pandas: 2.1.4
2025-09-14 19:23:18,589:INFO:              jinja2: 3.1.6
2025-09-14 19:23:18,589:INFO:               scipy: 1.10.1
2025-09-14 19:23:18,589:INFO:              joblib: 1.3.2
2025-09-14 19:23:18,589:INFO:             sklearn: 1.4.2
2025-09-14 19:23:18,589:INFO:                pyod: 2.0.5
2025-09-14 19:23:18,589:INFO:            imblearn: 0.14.0
2025-09-14 19:23:18,589:INFO:   category_encoders: 2.7.0
2025-09-14 19:23:18,589:INFO:            lightgbm: 4.6.0
2025-09-14 19:23:18,589:INFO:               numba: 0.61.2
2025-09-14 19:23:18,589:INFO:            requests: 2.32.5
2025-09-14 19:23:18,589:INFO:          matplotlib: 3.7.5
2025-09-14 19:23:18,589:INFO:          scikitplot: 0.3.7
2025-09-14 19:23:18,589:INFO:         yellowbrick: 1.5
2025-09-14 19:23:18,590:INFO:              plotly: 6.3.0
2025-09-14 19:23:18,590:INFO:    plotly-resampler: Not installed
2025-09-14 19:23:18,590:INFO:             kaleido: 1.0.0
2025-09-14 19:23:18,590:INFO:           schemdraw: 0.15
2025-09-14 19:23:18,590:INFO:         statsmodels: 0.14.5
2025-09-14 19:23:18,590:INFO:              sktime: 0.26.0
2025-09-14 19:23:18,590:INFO:               tbats: 1.1.3
2025-09-14 19:23:18,590:INFO:            pmdarima: 2.0.4
2025-09-14 19:23:18,590:INFO:              psutil: 7.0.0
2025-09-14 19:23:18,590:INFO:          markupsafe: 3.0.2
2025-09-14 19:23:18,590:INFO:             pickle5: Not installed
2025-09-14 19:23:18,590:INFO:         cloudpickle: 3.1.1
2025-09-14 19:23:18,590:INFO:         deprecation: 2.1.0
2025-09-14 19:23:18,590:INFO:              xxhash: 3.5.0
2025-09-14 19:23:18,590:INFO:           wurlitzer: 3.1.1
2025-09-14 19:23:18,590:INFO:PyCaret optional dependencies:
2025-09-14 19:23:18,595:INFO:                shap: Not installed
2025-09-14 19:23:18,595:INFO:           interpret: Not installed
2025-09-14 19:23:18,595:INFO:                umap: Not installed
2025-09-14 19:23:18,595:INFO:     ydata_profiling: Not installed
2025-09-14 19:23:18,595:INFO:  explainerdashboard: Not installed
2025-09-14 19:23:18,595:INFO:             autoviz: Not installed
2025-09-14 19:23:18,595:INFO:           fairlearn: Not installed
2025-09-14 19:23:18,595:INFO:          deepchecks: Not installed
2025-09-14 19:23:18,595:INFO:             xgboost: Not installed
2025-09-14 19:23:18,595:INFO:            catboost: Not installed
2025-09-14 19:23:18,595:INFO:              kmodes: Not installed
2025-09-14 19:23:18,595:INFO:             mlxtend: Not installed
2025-09-14 19:23:18,595:INFO:       statsforecast: Not installed
2025-09-14 19:23:18,595:INFO:        tune_sklearn: Not installed
2025-09-14 19:23:18,595:INFO:                 ray: Not installed
2025-09-14 19:23:18,595:INFO:            hyperopt: Not installed
2025-09-14 19:23:18,595:INFO:              optuna: Not installed
2025-09-14 19:23:18,595:INFO:               skopt: Not installed
2025-09-14 19:23:18,595:INFO:              mlflow: Not installed
2025-09-14 19:23:18,595:INFO:              gradio: Not installed
2025-09-14 19:23:18,595:INFO:             fastapi: Not installed
2025-09-14 19:23:18,595:INFO:             uvicorn: Not installed
2025-09-14 19:23:18,595:INFO:              m2cgen: Not installed
2025-09-14 19:23:18,595:INFO:           evidently: Not installed
2025-09-14 19:23:18,595:INFO:               fugue: Not installed
2025-09-14 19:23:18,595:INFO:           streamlit: 1.49.1
2025-09-14 19:23:18,595:INFO:             prophet: Not installed
2025-09-14 19:23:18,595:INFO:None
2025-09-14 19:23:18,595:INFO:Set up data.
2025-09-14 19:23:18,601:INFO:Set up folding strategy.
2025-09-14 19:23:18,601:INFO:Set up train/test split.
2025-09-14 19:23:18,617:INFO:Set up index.
2025-09-14 19:23:18,617:INFO:Assigning column types.
2025-09-14 19:23:18,618:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-14 19:23:18,619:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,621:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,623:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,648:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,666:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,666:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:18,667:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:18,667:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,669:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,671:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,694:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,713:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,713:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:18,714:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:18,714:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-14 19:23:18,716:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,718:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,741:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,759:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,760:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:18,760:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:18,762:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,764:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,787:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,805:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:18,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:18,806:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-14 19:23:18,809:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,852:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,870:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,871:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:18,871:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:18,874:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,898:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,917:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:18,917:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:18,917:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-14 19:23:18,945:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,963:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-14 19:23:18,963:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:18,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:18,991:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-14 19:23:19,009:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-14 19:23:19,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:19,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:19,010:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-14 19:23:19,038:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-14 19:23:19,056:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:19,056:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:19,084:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-14 19:23:19,103:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:19,103:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:19,103:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-14 19:23:19,150:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:19,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:19,196:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:19,196:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:19,198:INFO:Preparing preprocessing pipeline...
2025-09-14 19:23:19,198:INFO:Set up simple imputation.
2025-09-14 19:23:19,200:INFO:Set up encoding of ordinal features.
2025-09-14 19:23:19,200:INFO:Set up encoding of categorical features.
2025-09-14 19:23:19,229:INFO:Finished creating preprocessing pipeline.
2025-09-14 19:23:19,239:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/0q/7cfl8yq545917gynw0b94kkr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encodin...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-09-14 19:23:19,239:INFO:Creating final display dataframe.
2025-09-14 19:23:19,307:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape         (936, 10)
6    Transformed test set shape         (402, 10)
7              Numeric features                 3
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              21e3
2025-09-14 19:23:19,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:19,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:19,399:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:19,399:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-14 19:23:19,399:INFO:setup() successfully completed in 0.9s...............
2025-09-14 19:24:32,384:INFO:Initializing compare_models()
2025-09-14 19:24:32,385:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-09-14 19:24:32,385:INFO:Checking exceptions
2025-09-14 19:24:32,394:INFO:Preparing display monitor
2025-09-14 19:24:32,476:INFO:Initializing Linear Regression
2025-09-14 19:24:32,476:INFO:Total runtime is 1.123348871866862e-05 minutes
2025-09-14 19:24:32,480:INFO:SubProcess create_model() called ==================================
2025-09-14 19:24:32,480:INFO:Initializing create_model()
2025-09-14 19:24:32,480:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17c844a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:24:32,480:INFO:Checking exceptions
2025-09-14 19:24:32,481:INFO:Importing libraries
2025-09-14 19:24:32,481:INFO:Copying training dataset
2025-09-14 19:24:32,484:INFO:Defining folds
2025-09-14 19:24:32,484:INFO:Declaring metric variables
2025-09-14 19:24:32,486:INFO:Importing untrained model
2025-09-14 19:24:32,489:INFO:Linear Regression Imported successfully
2025-09-14 19:24:32,493:INFO:Starting cross validation
2025-09-14 19:24:32,499:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-14 19:24:36,924:INFO:Calculating mean and std
2025-09-14 19:24:36,927:INFO:Creating metrics dataframe
2025-09-14 19:24:36,932:INFO:Uploading results into container
2025-09-14 19:24:36,933:INFO:Uploading model into container now
2025-09-14 19:24:36,934:INFO:_master_model_container: 1
2025-09-14 19:24:36,934:INFO:_display_container: 2
2025-09-14 19:24:36,935:INFO:LinearRegression(n_jobs=-1)
2025-09-14 19:24:36,935:INFO:create_model() successfully completed......................................
2025-09-14 19:24:37,045:INFO:SubProcess create_model() end ==================================
2025-09-14 19:24:37,045:INFO:Creating metrics dataframe
2025-09-14 19:24:37,048:INFO:Initializing Lasso Regression
2025-09-14 19:24:37,048:INFO:Total runtime is 0.07620687882105509 minutes
2025-09-14 19:24:37,049:INFO:SubProcess create_model() called ==================================
2025-09-14 19:24:37,049:INFO:Initializing create_model()
2025-09-14 19:24:37,050:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17c844a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:24:37,050:INFO:Checking exceptions
2025-09-14 19:24:37,050:INFO:Importing libraries
2025-09-14 19:24:37,050:INFO:Copying training dataset
2025-09-14 19:24:37,053:INFO:Defining folds
2025-09-14 19:24:37,053:INFO:Declaring metric variables
2025-09-14 19:24:37,054:INFO:Importing untrained model
2025-09-14 19:24:37,057:INFO:Lasso Regression Imported successfully
2025-09-14 19:24:37,059:INFO:Starting cross validation
2025-09-14 19:24:37,060:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-14 19:24:37,171:INFO:Calculating mean and std
2025-09-14 19:24:37,171:INFO:Creating metrics dataframe
2025-09-14 19:24:37,172:INFO:Uploading results into container
2025-09-14 19:24:37,172:INFO:Uploading model into container now
2025-09-14 19:24:37,172:INFO:_master_model_container: 2
2025-09-14 19:24:37,172:INFO:_display_container: 2
2025-09-14 19:24:37,172:INFO:Lasso(random_state=123)
2025-09-14 19:24:37,172:INFO:create_model() successfully completed......................................
2025-09-14 19:24:37,218:INFO:SubProcess create_model() end ==================================
2025-09-14 19:24:37,218:INFO:Creating metrics dataframe
2025-09-14 19:24:37,222:INFO:Initializing Ridge Regression
2025-09-14 19:24:37,223:INFO:Total runtime is 0.07911436557769776 minutes
2025-09-14 19:24:37,224:INFO:SubProcess create_model() called ==================================
2025-09-14 19:24:37,224:INFO:Initializing create_model()
2025-09-14 19:24:37,224:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17c844a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:24:37,224:INFO:Checking exceptions
2025-09-14 19:24:37,224:INFO:Importing libraries
2025-09-14 19:24:37,224:INFO:Copying training dataset
2025-09-14 19:24:37,227:INFO:Defining folds
2025-09-14 19:24:37,227:INFO:Declaring metric variables
2025-09-14 19:24:37,228:INFO:Importing untrained model
2025-09-14 19:24:37,229:INFO:Ridge Regression Imported successfully
2025-09-14 19:24:37,232:INFO:Starting cross validation
2025-09-14 19:24:37,233:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-14 19:24:37,361:INFO:Calculating mean and std
2025-09-14 19:24:37,362:INFO:Creating metrics dataframe
2025-09-14 19:24:37,363:INFO:Uploading results into container
2025-09-14 19:24:37,363:INFO:Uploading model into container now
2025-09-14 19:24:37,363:INFO:_master_model_container: 3
2025-09-14 19:24:37,363:INFO:_display_container: 2
2025-09-14 19:24:37,363:INFO:Ridge(random_state=123)
2025-09-14 19:24:37,363:INFO:create_model() successfully completed......................................
2025-09-14 19:24:37,410:INFO:SubProcess create_model() end ==================================
2025-09-14 19:24:37,410:INFO:Creating metrics dataframe
2025-09-14 19:24:37,413:INFO:Initializing Elastic Net
2025-09-14 19:24:37,413:INFO:Total runtime is 0.08229614893595377 minutes
2025-09-14 19:24:37,415:INFO:SubProcess create_model() called ==================================
2025-09-14 19:24:37,415:INFO:Initializing create_model()
2025-09-14 19:24:37,415:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17c844a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:24:37,415:INFO:Checking exceptions
2025-09-14 19:24:37,416:INFO:Importing libraries
2025-09-14 19:24:37,416:INFO:Copying training dataset
2025-09-14 19:24:37,417:INFO:Defining folds
2025-09-14 19:24:37,417:INFO:Declaring metric variables
2025-09-14 19:24:37,418:INFO:Importing untrained model
2025-09-14 19:24:37,419:INFO:Elastic Net Imported successfully
2025-09-14 19:24:37,422:INFO:Starting cross validation
2025-09-14 19:24:37,423:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-14 19:24:37,507:INFO:Calculating mean and std
2025-09-14 19:24:37,507:INFO:Creating metrics dataframe
2025-09-14 19:24:37,508:INFO:Uploading results into container
2025-09-14 19:24:37,508:INFO:Uploading model into container now
2025-09-14 19:24:37,508:INFO:_master_model_container: 4
2025-09-14 19:24:37,508:INFO:_display_container: 2
2025-09-14 19:24:37,509:INFO:ElasticNet(random_state=123)
2025-09-14 19:24:37,509:INFO:create_model() successfully completed......................................
2025-09-14 19:24:37,554:INFO:SubProcess create_model() end ==================================
2025-09-14 19:24:37,554:INFO:Creating metrics dataframe
2025-09-14 19:24:37,558:INFO:Initializing Least Angle Regression
2025-09-14 19:24:37,558:INFO:Total runtime is 0.08471036354700724 minutes
2025-09-14 19:24:37,560:INFO:SubProcess create_model() called ==================================
2025-09-14 19:24:37,560:INFO:Initializing create_model()
2025-09-14 19:24:37,560:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17c844a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:24:37,560:INFO:Checking exceptions
2025-09-14 19:24:37,560:INFO:Importing libraries
2025-09-14 19:24:37,560:INFO:Copying training dataset
2025-09-14 19:24:37,562:INFO:Defining folds
2025-09-14 19:24:37,562:INFO:Declaring metric variables
2025-09-14 19:24:37,563:INFO:Importing untrained model
2025-09-14 19:24:37,564:INFO:Least Angle Regression Imported successfully
2025-09-14 19:24:37,567:INFO:Starting cross validation
2025-09-14 19:24:37,568:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-14 19:24:37,654:INFO:Calculating mean and std
2025-09-14 19:24:37,654:INFO:Creating metrics dataframe
2025-09-14 19:24:37,655:INFO:Uploading results into container
2025-09-14 19:24:37,655:INFO:Uploading model into container now
2025-09-14 19:24:37,655:INFO:_master_model_container: 5
2025-09-14 19:24:37,655:INFO:_display_container: 2
2025-09-14 19:24:37,655:INFO:Lars(random_state=123)
2025-09-14 19:24:37,655:INFO:create_model() successfully completed......................................
2025-09-14 19:24:37,701:INFO:SubProcess create_model() end ==================================
2025-09-14 19:24:37,701:INFO:Creating metrics dataframe
2025-09-14 19:24:37,706:INFO:Initializing Lasso Least Angle Regression
2025-09-14 19:24:37,706:INFO:Total runtime is 0.0871748646100362 minutes
2025-09-14 19:24:37,707:INFO:SubProcess create_model() called ==================================
2025-09-14 19:24:37,708:INFO:Initializing create_model()
2025-09-14 19:24:37,708:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17c844a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:24:37,708:INFO:Checking exceptions
2025-09-14 19:24:37,708:INFO:Importing libraries
2025-09-14 19:24:37,708:INFO:Copying training dataset
2025-09-14 19:24:37,710:INFO:Defining folds
2025-09-14 19:24:37,710:INFO:Declaring metric variables
2025-09-14 19:24:37,711:INFO:Importing untrained model
2025-09-14 19:24:37,712:INFO:Lasso Least Angle Regression Imported successfully
2025-09-14 19:24:37,714:INFO:Starting cross validation
2025-09-14 19:24:37,715:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-14 19:24:37,810:INFO:Calculating mean and std
2025-09-14 19:24:37,811:INFO:Creating metrics dataframe
2025-09-14 19:24:37,812:INFO:Uploading results into container
2025-09-14 19:24:37,812:INFO:Uploading model into container now
2025-09-14 19:24:37,812:INFO:_master_model_container: 6
2025-09-14 19:24:37,812:INFO:_display_container: 2
2025-09-14 19:24:37,813:INFO:LassoLars(random_state=123)
2025-09-14 19:24:37,813:INFO:create_model() successfully completed......................................
2025-09-14 19:24:37,860:INFO:SubProcess create_model() end ==================================
2025-09-14 19:24:37,860:INFO:Creating metrics dataframe
2025-09-14 19:24:37,863:INFO:Initializing Orthogonal Matching Pursuit
2025-09-14 19:24:37,863:INFO:Total runtime is 0.08979734977086384 minutes
2025-09-14 19:24:37,865:INFO:SubProcess create_model() called ==================================
2025-09-14 19:24:37,865:INFO:Initializing create_model()
2025-09-14 19:24:37,865:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17c844a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:24:37,865:INFO:Checking exceptions
2025-09-14 19:24:37,865:INFO:Importing libraries
2025-09-14 19:24:37,865:INFO:Copying training dataset
2025-09-14 19:24:37,871:INFO:Defining folds
2025-09-14 19:24:37,871:INFO:Declaring metric variables
2025-09-14 19:24:37,874:INFO:Importing untrained model
2025-09-14 19:24:37,875:INFO:Orthogonal Matching Pursuit Imported successfully
2025-09-14 19:24:37,879:INFO:Starting cross validation
2025-09-14 19:24:37,880:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-14 19:24:37,954:INFO:Calculating mean and std
2025-09-14 19:24:37,954:INFO:Creating metrics dataframe
2025-09-14 19:24:37,955:INFO:Uploading results into container
2025-09-14 19:24:37,955:INFO:Uploading model into container now
2025-09-14 19:24:37,956:INFO:_master_model_container: 7
2025-09-14 19:24:37,956:INFO:_display_container: 2
2025-09-14 19:24:37,956:INFO:OrthogonalMatchingPursuit()
2025-09-14 19:24:37,956:INFO:create_model() successfully completed......................................
2025-09-14 19:24:38,003:INFO:SubProcess create_model() end ==================================
2025-09-14 19:24:38,003:INFO:Creating metrics dataframe
2025-09-14 19:24:38,006:INFO:Initializing Bayesian Ridge
2025-09-14 19:24:38,006:INFO:Total runtime is 0.09216976563135783 minutes
2025-09-14 19:24:38,007:INFO:SubProcess create_model() called ==================================
2025-09-14 19:24:38,007:INFO:Initializing create_model()
2025-09-14 19:24:38,007:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17c844a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:24:38,007:INFO:Checking exceptions
2025-09-14 19:24:38,007:INFO:Importing libraries
2025-09-14 19:24:38,007:INFO:Copying training dataset
2025-09-14 19:24:38,009:INFO:Defining folds
2025-09-14 19:24:38,009:INFO:Declaring metric variables
2025-09-14 19:24:38,010:INFO:Importing untrained model
2025-09-14 19:24:38,012:INFO:Bayesian Ridge Imported successfully
2025-09-14 19:24:38,014:INFO:Starting cross validation
2025-09-14 19:24:38,015:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-14 19:24:38,100:INFO:Calculating mean and std
2025-09-14 19:24:38,100:INFO:Creating metrics dataframe
2025-09-14 19:24:38,101:INFO:Uploading results into container
2025-09-14 19:24:38,101:INFO:Uploading model into container now
2025-09-14 19:24:38,101:INFO:_master_model_container: 8
2025-09-14 19:24:38,101:INFO:_display_container: 2
2025-09-14 19:24:38,102:INFO:BayesianRidge()
2025-09-14 19:24:38,102:INFO:create_model() successfully completed......................................
2025-09-14 19:24:38,147:INFO:SubProcess create_model() end ==================================
2025-09-14 19:24:38,147:INFO:Creating metrics dataframe
2025-09-14 19:24:38,151:INFO:Initializing Passive Aggressive Regressor
2025-09-14 19:24:38,152:INFO:Total runtime is 0.09460039933522542 minutes
2025-09-14 19:24:38,154:INFO:SubProcess create_model() called ==================================
2025-09-14 19:24:38,154:INFO:Initializing create_model()
2025-09-14 19:24:38,154:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17c844a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:24:38,154:INFO:Checking exceptions
2025-09-14 19:24:38,154:INFO:Importing libraries
2025-09-14 19:24:38,154:INFO:Copying training dataset
2025-09-14 19:24:38,156:INFO:Defining folds
2025-09-14 19:24:38,156:INFO:Declaring metric variables
2025-09-14 19:24:38,157:INFO:Importing untrained model
2025-09-14 19:24:38,158:INFO:Passive Aggressive Regressor Imported successfully
2025-09-14 19:24:38,160:INFO:Starting cross validation
2025-09-14 19:24:38,161:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-14 19:24:38,260:INFO:Calculating mean and std
2025-09-14 19:24:38,261:INFO:Creating metrics dataframe
2025-09-14 19:24:38,262:INFO:Uploading results into container
2025-09-14 19:24:38,262:INFO:Uploading model into container now
2025-09-14 19:24:38,262:INFO:_master_model_container: 9
2025-09-14 19:24:38,262:INFO:_display_container: 2
2025-09-14 19:24:38,262:INFO:PassiveAggressiveRegressor(random_state=123)
2025-09-14 19:24:38,263:INFO:create_model() successfully completed......................................
2025-09-14 19:24:38,310:INFO:SubProcess create_model() end ==================================
2025-09-14 19:24:38,310:INFO:Creating metrics dataframe
2025-09-14 19:24:38,313:INFO:Initializing Huber Regressor
2025-09-14 19:24:38,313:INFO:Total runtime is 0.0972927967707316 minutes
2025-09-14 19:24:38,314:INFO:SubProcess create_model() called ==================================
2025-09-14 19:24:38,314:INFO:Initializing create_model()
2025-09-14 19:24:38,314:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17c844a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:24:38,314:INFO:Checking exceptions
2025-09-14 19:24:38,315:INFO:Importing libraries
2025-09-14 19:24:38,315:INFO:Copying training dataset
2025-09-14 19:24:38,317:INFO:Defining folds
2025-09-14 19:24:38,317:INFO:Declaring metric variables
2025-09-14 19:24:38,318:INFO:Importing untrained model
2025-09-14 19:24:38,319:INFO:Huber Regressor Imported successfully
2025-09-14 19:24:38,322:INFO:Starting cross validation
2025-09-14 19:24:38,323:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-14 19:24:38,363:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-09-14 19:24:38,366:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-09-14 19:24:38,372:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-09-14 19:24:38,377:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-09-14 19:24:38,382:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-09-14 19:24:38,399:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-09-14 19:24:38,401:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-09-14 19:24:38,403:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-09-14 19:24:38,410:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-09-14 19:24:38,416:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-09-14 19:24:38,433:INFO:Calculating mean and std
2025-09-14 19:24:38,433:INFO:Creating metrics dataframe
2025-09-14 19:24:38,434:INFO:Uploading results into container
2025-09-14 19:24:38,434:INFO:Uploading model into container now
2025-09-14 19:24:38,434:INFO:_master_model_container: 10
2025-09-14 19:24:38,434:INFO:_display_container: 2
2025-09-14 19:24:38,435:INFO:HuberRegressor()
2025-09-14 19:24:38,435:INFO:create_model() successfully completed......................................
2025-09-14 19:24:38,481:INFO:SubProcess create_model() end ==================================
2025-09-14 19:24:38,481:INFO:Creating metrics dataframe
2025-09-14 19:24:38,484:INFO:Initializing K Neighbors Regressor
2025-09-14 19:24:38,484:INFO:Total runtime is 0.10014690160751342 minutes
2025-09-14 19:24:38,486:INFO:SubProcess create_model() called ==================================
2025-09-14 19:24:38,487:INFO:Initializing create_model()
2025-09-14 19:24:38,487:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17c844a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:24:38,487:INFO:Checking exceptions
2025-09-14 19:24:38,487:INFO:Importing libraries
2025-09-14 19:24:38,487:INFO:Copying training dataset
2025-09-14 19:24:38,489:INFO:Defining folds
2025-09-14 19:24:38,489:INFO:Declaring metric variables
2025-09-14 19:24:38,490:INFO:Importing untrained model
2025-09-14 19:24:38,491:INFO:K Neighbors Regressor Imported successfully
2025-09-14 19:24:38,493:INFO:Starting cross validation
2025-09-14 19:24:38,494:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-14 19:24:38,606:INFO:Calculating mean and std
2025-09-14 19:24:38,606:INFO:Creating metrics dataframe
2025-09-14 19:24:38,607:INFO:Uploading results into container
2025-09-14 19:24:38,608:INFO:Uploading model into container now
2025-09-14 19:24:38,608:INFO:_master_model_container: 11
2025-09-14 19:24:38,608:INFO:_display_container: 2
2025-09-14 19:24:38,608:INFO:KNeighborsRegressor(n_jobs=-1)
2025-09-14 19:24:38,608:INFO:create_model() successfully completed......................................
2025-09-14 19:24:38,655:INFO:SubProcess create_model() end ==================================
2025-09-14 19:24:38,656:INFO:Creating metrics dataframe
2025-09-14 19:24:38,659:INFO:Initializing Decision Tree Regressor
2025-09-14 19:24:38,659:INFO:Total runtime is 0.10305949846903482 minutes
2025-09-14 19:24:38,660:INFO:SubProcess create_model() called ==================================
2025-09-14 19:24:38,661:INFO:Initializing create_model()
2025-09-14 19:24:38,661:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17c844a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:24:38,661:INFO:Checking exceptions
2025-09-14 19:24:38,661:INFO:Importing libraries
2025-09-14 19:24:38,661:INFO:Copying training dataset
2025-09-14 19:24:38,663:INFO:Defining folds
2025-09-14 19:24:38,663:INFO:Declaring metric variables
2025-09-14 19:24:38,664:INFO:Importing untrained model
2025-09-14 19:24:38,665:INFO:Decision Tree Regressor Imported successfully
2025-09-14 19:24:38,667:INFO:Starting cross validation
2025-09-14 19:24:38,668:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-14 19:24:38,756:INFO:Calculating mean and std
2025-09-14 19:24:38,756:INFO:Creating metrics dataframe
2025-09-14 19:24:38,757:INFO:Uploading results into container
2025-09-14 19:24:38,757:INFO:Uploading model into container now
2025-09-14 19:24:38,757:INFO:_master_model_container: 12
2025-09-14 19:24:38,757:INFO:_display_container: 2
2025-09-14 19:24:38,757:INFO:DecisionTreeRegressor(random_state=123)
2025-09-14 19:24:38,757:INFO:create_model() successfully completed......................................
2025-09-14 19:24:38,802:INFO:SubProcess create_model() end ==================================
2025-09-14 19:24:38,803:INFO:Creating metrics dataframe
2025-09-14 19:24:38,807:INFO:Initializing Random Forest Regressor
2025-09-14 19:24:38,807:INFO:Total runtime is 0.10552184979120889 minutes
2025-09-14 19:24:38,809:INFO:SubProcess create_model() called ==================================
2025-09-14 19:24:38,809:INFO:Initializing create_model()
2025-09-14 19:24:38,809:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17c844a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:24:38,809:INFO:Checking exceptions
2025-09-14 19:24:38,809:INFO:Importing libraries
2025-09-14 19:24:38,809:INFO:Copying training dataset
2025-09-14 19:24:38,811:INFO:Defining folds
2025-09-14 19:24:38,811:INFO:Declaring metric variables
2025-09-14 19:24:38,812:INFO:Importing untrained model
2025-09-14 19:24:38,813:INFO:Random Forest Regressor Imported successfully
2025-09-14 19:24:38,816:INFO:Starting cross validation
2025-09-14 19:24:38,817:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-14 19:24:39,275:INFO:Calculating mean and std
2025-09-14 19:24:39,275:INFO:Creating metrics dataframe
2025-09-14 19:24:39,276:INFO:Uploading results into container
2025-09-14 19:24:39,276:INFO:Uploading model into container now
2025-09-14 19:24:39,277:INFO:_master_model_container: 13
2025-09-14 19:24:39,277:INFO:_display_container: 2
2025-09-14 19:24:39,277:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2025-09-14 19:24:39,277:INFO:create_model() successfully completed......................................
2025-09-14 19:24:39,326:INFO:SubProcess create_model() end ==================================
2025-09-14 19:24:39,326:INFO:Creating metrics dataframe
2025-09-14 19:24:39,330:INFO:Initializing Extra Trees Regressor
2025-09-14 19:24:39,330:INFO:Total runtime is 0.11424169540405273 minutes
2025-09-14 19:24:39,331:INFO:SubProcess create_model() called ==================================
2025-09-14 19:24:39,332:INFO:Initializing create_model()
2025-09-14 19:24:39,332:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17c844a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:24:39,332:INFO:Checking exceptions
2025-09-14 19:24:39,332:INFO:Importing libraries
2025-09-14 19:24:39,332:INFO:Copying training dataset
2025-09-14 19:24:39,334:INFO:Defining folds
2025-09-14 19:24:39,334:INFO:Declaring metric variables
2025-09-14 19:24:39,335:INFO:Importing untrained model
2025-09-14 19:24:39,337:INFO:Extra Trees Regressor Imported successfully
2025-09-14 19:24:39,339:INFO:Starting cross validation
2025-09-14 19:24:39,340:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-14 19:24:39,684:INFO:Calculating mean and std
2025-09-14 19:24:39,685:INFO:Creating metrics dataframe
2025-09-14 19:24:39,686:INFO:Uploading results into container
2025-09-14 19:24:39,686:INFO:Uploading model into container now
2025-09-14 19:24:39,686:INFO:_master_model_container: 14
2025-09-14 19:24:39,686:INFO:_display_container: 2
2025-09-14 19:24:39,686:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2025-09-14 19:24:39,686:INFO:create_model() successfully completed......................................
2025-09-14 19:24:39,733:INFO:SubProcess create_model() end ==================================
2025-09-14 19:24:39,733:INFO:Creating metrics dataframe
2025-09-14 19:24:39,738:INFO:Initializing AdaBoost Regressor
2025-09-14 19:24:39,738:INFO:Total runtime is 0.12103420098622639 minutes
2025-09-14 19:24:39,739:INFO:SubProcess create_model() called ==================================
2025-09-14 19:24:39,739:INFO:Initializing create_model()
2025-09-14 19:24:39,739:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17c844a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:24:39,739:INFO:Checking exceptions
2025-09-14 19:24:39,739:INFO:Importing libraries
2025-09-14 19:24:39,739:INFO:Copying training dataset
2025-09-14 19:24:39,741:INFO:Defining folds
2025-09-14 19:24:39,741:INFO:Declaring metric variables
2025-09-14 19:24:39,742:INFO:Importing untrained model
2025-09-14 19:24:39,744:INFO:AdaBoost Regressor Imported successfully
2025-09-14 19:24:39,746:INFO:Starting cross validation
2025-09-14 19:24:39,747:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-14 19:24:39,879:INFO:Calculating mean and std
2025-09-14 19:24:39,880:INFO:Creating metrics dataframe
2025-09-14 19:24:39,881:INFO:Uploading results into container
2025-09-14 19:24:39,881:INFO:Uploading model into container now
2025-09-14 19:24:39,881:INFO:_master_model_container: 15
2025-09-14 19:24:39,881:INFO:_display_container: 2
2025-09-14 19:24:39,881:INFO:AdaBoostRegressor(random_state=123)
2025-09-14 19:24:39,881:INFO:create_model() successfully completed......................................
2025-09-14 19:24:39,930:INFO:SubProcess create_model() end ==================================
2025-09-14 19:24:39,930:INFO:Creating metrics dataframe
2025-09-14 19:24:39,934:INFO:Initializing Gradient Boosting Regressor
2025-09-14 19:24:39,934:INFO:Total runtime is 0.12430725097656249 minutes
2025-09-14 19:24:39,935:INFO:SubProcess create_model() called ==================================
2025-09-14 19:24:39,936:INFO:Initializing create_model()
2025-09-14 19:24:39,936:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17c844a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:24:39,936:INFO:Checking exceptions
2025-09-14 19:24:39,936:INFO:Importing libraries
2025-09-14 19:24:39,936:INFO:Copying training dataset
2025-09-14 19:24:39,938:INFO:Defining folds
2025-09-14 19:24:39,938:INFO:Declaring metric variables
2025-09-14 19:24:39,939:INFO:Importing untrained model
2025-09-14 19:24:39,940:INFO:Gradient Boosting Regressor Imported successfully
2025-09-14 19:24:39,943:INFO:Starting cross validation
2025-09-14 19:24:39,944:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-14 19:24:40,164:INFO:Calculating mean and std
2025-09-14 19:24:40,164:INFO:Creating metrics dataframe
2025-09-14 19:24:40,165:INFO:Uploading results into container
2025-09-14 19:24:40,165:INFO:Uploading model into container now
2025-09-14 19:24:40,165:INFO:_master_model_container: 16
2025-09-14 19:24:40,165:INFO:_display_container: 2
2025-09-14 19:24:40,166:INFO:GradientBoostingRegressor(random_state=123)
2025-09-14 19:24:40,166:INFO:create_model() successfully completed......................................
2025-09-14 19:24:40,215:INFO:SubProcess create_model() end ==================================
2025-09-14 19:24:40,215:INFO:Creating metrics dataframe
2025-09-14 19:24:40,219:INFO:Initializing Light Gradient Boosting Machine
2025-09-14 19:24:40,219:INFO:Total runtime is 0.1290576656659444 minutes
2025-09-14 19:24:40,220:INFO:SubProcess create_model() called ==================================
2025-09-14 19:24:40,220:INFO:Initializing create_model()
2025-09-14 19:24:40,220:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17c844a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:24:40,221:INFO:Checking exceptions
2025-09-14 19:24:40,221:INFO:Importing libraries
2025-09-14 19:24:40,221:INFO:Copying training dataset
2025-09-14 19:24:40,223:INFO:Defining folds
2025-09-14 19:24:40,223:INFO:Declaring metric variables
2025-09-14 19:24:40,224:INFO:Importing untrained model
2025-09-14 19:24:40,225:INFO:Light Gradient Boosting Machine Imported successfully
2025-09-14 19:24:40,228:INFO:Starting cross validation
2025-09-14 19:24:40,228:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-14 19:24:42,630:INFO:Calculating mean and std
2025-09-14 19:24:42,630:INFO:Creating metrics dataframe
2025-09-14 19:24:42,631:INFO:Uploading results into container
2025-09-14 19:24:42,631:INFO:Uploading model into container now
2025-09-14 19:24:42,631:INFO:_master_model_container: 17
2025-09-14 19:24:42,631:INFO:_display_container: 2
2025-09-14 19:24:42,632:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2025-09-14 19:24:42,632:INFO:create_model() successfully completed......................................
2025-09-14 19:24:42,680:INFO:SubProcess create_model() end ==================================
2025-09-14 19:24:42,680:INFO:Creating metrics dataframe
2025-09-14 19:24:42,685:INFO:Initializing Dummy Regressor
2025-09-14 19:24:42,685:INFO:Total runtime is 0.1701542019844055 minutes
2025-09-14 19:24:42,687:INFO:SubProcess create_model() called ==================================
2025-09-14 19:24:42,687:INFO:Initializing create_model()
2025-09-14 19:24:42,687:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17c844a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:24:42,687:INFO:Checking exceptions
2025-09-14 19:24:42,687:INFO:Importing libraries
2025-09-14 19:24:42,687:INFO:Copying training dataset
2025-09-14 19:24:42,689:INFO:Defining folds
2025-09-14 19:24:42,689:INFO:Declaring metric variables
2025-09-14 19:24:42,690:INFO:Importing untrained model
2025-09-14 19:24:42,691:INFO:Dummy Regressor Imported successfully
2025-09-14 19:24:42,694:INFO:Starting cross validation
2025-09-14 19:24:42,695:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-14 19:24:42,800:INFO:Calculating mean and std
2025-09-14 19:24:42,801:INFO:Creating metrics dataframe
2025-09-14 19:24:42,802:INFO:Uploading results into container
2025-09-14 19:24:42,802:INFO:Uploading model into container now
2025-09-14 19:24:42,802:INFO:_master_model_container: 18
2025-09-14 19:24:42,802:INFO:_display_container: 2
2025-09-14 19:24:42,802:INFO:DummyRegressor()
2025-09-14 19:24:42,802:INFO:create_model() successfully completed......................................
2025-09-14 19:24:42,852:INFO:SubProcess create_model() end ==================================
2025-09-14 19:24:42,852:INFO:Creating metrics dataframe
2025-09-14 19:24:42,859:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-09-14 19:24:42,862:INFO:Initializing create_model()
2025-09-14 19:24:42,862:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:24:42,862:INFO:Checking exceptions
2025-09-14 19:24:42,863:INFO:Importing libraries
2025-09-14 19:24:42,863:INFO:Copying training dataset
2025-09-14 19:24:42,865:INFO:Defining folds
2025-09-14 19:24:42,865:INFO:Declaring metric variables
2025-09-14 19:24:42,865:INFO:Importing untrained model
2025-09-14 19:24:42,865:INFO:Declaring custom model
2025-09-14 19:24:42,865:INFO:Gradient Boosting Regressor Imported successfully
2025-09-14 19:24:42,866:INFO:Cross validation set to False
2025-09-14 19:24:42,866:INFO:Fitting Model
2025-09-14 19:24:42,950:INFO:GradientBoostingRegressor(random_state=123)
2025-09-14 19:24:42,951:INFO:create_model() successfully completed......................................
2025-09-14 19:24:43,011:INFO:_master_model_container: 18
2025-09-14 19:24:43,011:INFO:_display_container: 2
2025-09-14 19:24:43,012:INFO:GradientBoostingRegressor(random_state=123)
2025-09-14 19:24:43,012:INFO:compare_models() successfully completed......................................
2025-09-14 19:25:52,266:INFO:Initializing predict_model()
2025-09-14 19:25:52,268:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=GradientBoostingRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17b938680>)
2025-09-14 19:25:52,268:INFO:Checking exceptions
2025-09-14 19:25:52,268:INFO:Preloading libraries
2025-09-14 19:25:52,340:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/sklearn/metrics/_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-09-14 19:27:14,803:INFO:Initializing finalize_model()
2025-09-14 19:27:14,805:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=GradientBoostingRegressor(random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-14 19:27:14,806:INFO:Finalizing GradientBoostingRegressor(random_state=123)
2025-09-14 19:27:14,816:INFO:Initializing create_model()
2025-09-14 19:27:14,816:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1769cfb10>, estimator=GradientBoostingRegressor(random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-14 19:27:14,816:INFO:Checking exceptions
2025-09-14 19:27:14,819:INFO:Importing libraries
2025-09-14 19:27:14,819:INFO:Copying training dataset
2025-09-14 19:27:14,820:INFO:Defining folds
2025-09-14 19:27:14,820:INFO:Declaring metric variables
2025-09-14 19:27:14,820:INFO:Importing untrained model
2025-09-14 19:27:14,820:INFO:Declaring custom model
2025-09-14 19:27:14,821:INFO:Gradient Boosting Regressor Imported successfully
2025-09-14 19:27:14,826:INFO:Cross validation set to False
2025-09-14 19:27:14,826:INFO:Fitting Model
2025-09-14 19:27:14,938:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))])
2025-09-14 19:27:14,938:INFO:create_model() successfully completed......................................
2025-09-14 19:27:15,024:INFO:_master_model_container: 18
2025-09-14 19:27:15,024:INFO:_display_container: 3
2025-09-14 19:27:15,034:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))])
2025-09-14 19:27:15,034:INFO:finalize_model() successfully completed......................................
2025-09-14 19:28:24,630:INFO:Initializing save_model()
2025-09-14 19:28:24,630:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), model_name=best_final_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/0q/7cfl8yq545917gynw0b94kkr0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encodin...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2025-09-14 19:28:24,631:INFO:Adding model into prep_pipe
2025-09-14 19:28:24,631:WARNING:Only Model saved as it was a pipeline.
2025-09-14 19:28:24,640:INFO:best_final_model.pkl saved in current working directory
2025-09-14 19:28:24,653:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))])
2025-09-14 19:28:24,653:INFO:save_model() successfully completed......................................
2025-09-14 20:07:10,060:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 20:07:23,586:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 20:09:20,577:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 20:09:50,642:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 20:20:39,096:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 20:21:06,135:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 20:23:17,075:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 20:23:38,603:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 20:50:01,269:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 20:50:04,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 20:50:04,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 20:50:04,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 20:50:04,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 20:50:04,482:INFO:Initializing load_model()
2025-09-14 20:50:04,482:INFO:load_model(model_name=best_final_model.pkl, platform=None, authentication=None, verbose=True)
2025-09-14 20:52:52,890:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 20:52:54,919:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 20:52:54,919:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 20:52:54,919:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 20:52:54,919:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 20:52:55,077:INFO:Initializing load_model()
2025-09-14 20:52:55,077:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 20:52:55,841:INFO:Initializing predict_model()
2025-09-14 20:52:55,841:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x12f8ae6d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f86b9c0>)
2025-09-14 20:52:55,842:INFO:Checking exceptions
2025-09-14 20:52:55,842:INFO:Preloading libraries
2025-09-14 20:52:55,842:INFO:Set up data.
2025-09-14 20:52:55,847:INFO:Set up index.
2025-09-14 20:52:55,949:INFO:Initializing predict_model()
2025-09-14 20:52:55,949:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15f82e250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15d704a40>)
2025-09-14 20:52:55,949:INFO:Checking exceptions
2025-09-14 20:52:55,949:INFO:Preloading libraries
2025-09-14 20:52:55,949:INFO:Set up data.
2025-09-14 20:52:55,951:INFO:Set up index.
2025-09-14 20:53:04,783:INFO:Initializing load_model()
2025-09-14 20:53:04,785:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 20:53:06,130:INFO:Initializing predict_model()
2025-09-14 20:53:06,130:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309d19710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e2e840>)
2025-09-14 20:53:06,130:INFO:Checking exceptions
2025-09-14 20:53:06,130:INFO:Preloading libraries
2025-09-14 20:53:06,130:INFO:Set up data.
2025-09-14 20:53:06,135:INFO:Set up index.
2025-09-14 20:53:06,261:INFO:Initializing predict_model()
2025-09-14 20:53:06,261:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30dc3b710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30db6bec0>)
2025-09-14 20:53:06,261:INFO:Checking exceptions
2025-09-14 20:53:06,261:INFO:Preloading libraries
2025-09-14 20:53:06,261:INFO:Set up data.
2025-09-14 20:53:06,262:INFO:Set up index.
2025-09-14 20:55:12,734:INFO:Initializing predict_model()
2025-09-14 20:55:12,734:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1072c8610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e2e700>)
2025-09-14 20:55:12,734:INFO:Checking exceptions
2025-09-14 20:55:12,734:INFO:Preloading libraries
2025-09-14 20:55:12,734:INFO:Set up data.
2025-09-14 20:55:12,736:INFO:Set up index.
2025-09-14 20:55:14,740:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 20:55:16,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 20:55:16,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 20:55:16,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 20:55:16,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 20:55:16,777:INFO:Initializing load_model()
2025-09-14 20:55:16,777:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 20:55:17,283:INFO:Initializing predict_model()
2025-09-14 20:55:17,283:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16cef9a90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16cf2b100>)
2025-09-14 20:55:17,283:INFO:Checking exceptions
2025-09-14 20:55:17,283:INFO:Preloading libraries
2025-09-14 20:55:17,283:INFO:Set up data.
2025-09-14 20:55:17,287:INFO:Set up index.
2025-09-14 20:55:17,378:INFO:Initializing predict_model()
2025-09-14 20:55:17,379:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13fb13050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16ce04a40>)
2025-09-14 20:55:17,379:INFO:Checking exceptions
2025-09-14 20:55:17,379:INFO:Preloading libraries
2025-09-14 20:55:17,379:INFO:Set up data.
2025-09-14 20:55:17,380:INFO:Set up index.
2025-09-14 20:57:04,418:INFO:Initializing predict_model()
2025-09-14 20:57:04,422:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309d1a0d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3082bcc20>)
2025-09-14 20:57:04,422:INFO:Checking exceptions
2025-09-14 20:57:04,422:INFO:Preloading libraries
2025-09-14 20:57:04,422:INFO:Set up data.
2025-09-14 20:57:04,424:INFO:Set up index.
2025-09-14 20:57:06,523:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 20:57:08,493:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 20:57:08,493:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 20:57:08,493:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 20:57:08,493:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 20:57:08,641:INFO:Initializing load_model()
2025-09-14 20:57:08,641:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 20:57:10,405:INFO:Initializing predict_model()
2025-09-14 20:57:10,406:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15b8212d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f59b9c0>)
2025-09-14 20:57:10,406:INFO:Checking exceptions
2025-09-14 20:57:10,406:INFO:Preloading libraries
2025-09-14 20:57:10,406:INFO:Set up data.
2025-09-14 20:57:10,409:INFO:Set up index.
2025-09-14 20:57:10,491:INFO:Initializing predict_model()
2025-09-14 20:57:10,491:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15f1837d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f478ae0>)
2025-09-14 20:57:10,492:INFO:Checking exceptions
2025-09-14 20:57:10,492:INFO:Preloading libraries
2025-09-14 20:57:10,492:INFO:Set up data.
2025-09-14 20:57:10,493:INFO:Set up index.
2025-09-14 21:08:17,967:INFO:Initializing predict_model()
2025-09-14 21:08:17,970:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309f895d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30db69300>)
2025-09-14 21:08:17,970:INFO:Checking exceptions
2025-09-14 21:08:17,970:INFO:Preloading libraries
2025-09-14 21:08:17,971:INFO:Set up data.
2025-09-14 21:08:17,974:INFO:Set up index.
2025-09-14 21:08:19,867:INFO:Initializing predict_model()
2025-09-14 21:08:19,867:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30db74a50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x10795dd00>)
2025-09-14 21:08:19,868:INFO:Checking exceptions
2025-09-14 21:08:19,868:INFO:Preloading libraries
2025-09-14 21:08:19,868:INFO:Set up data.
2025-09-14 21:08:19,872:INFO:Set up index.
2025-09-14 21:08:21,588:INFO:Initializing predict_model()
2025-09-14 21:08:21,588:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1078fdc90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x107908f40>)
2025-09-14 21:08:21,588:INFO:Checking exceptions
2025-09-14 21:08:21,589:INFO:Preloading libraries
2025-09-14 21:08:21,589:INFO:Set up data.
2025-09-14 21:08:21,593:INFO:Set up index.
2025-09-14 21:08:24,879:INFO:Initializing predict_model()
2025-09-14 21:08:24,880:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309de0bd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309ff04a0>)
2025-09-14 21:08:24,880:INFO:Checking exceptions
2025-09-14 21:08:24,880:INFO:Preloading libraries
2025-09-14 21:08:24,880:INFO:Set up data.
2025-09-14 21:08:24,883:INFO:Set up index.
2025-09-14 21:08:25,107:INFO:Initializing predict_model()
2025-09-14 21:08:25,107:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309df6cd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309d7ede0>)
2025-09-14 21:08:25,107:INFO:Checking exceptions
2025-09-14 21:08:25,107:INFO:Preloading libraries
2025-09-14 21:08:25,107:INFO:Set up data.
2025-09-14 21:08:25,109:INFO:Set up index.
2025-09-14 21:08:25,355:INFO:Initializing predict_model()
2025-09-14 21:08:25,356:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3098c6250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e2ec00>)
2025-09-14 21:08:25,356:INFO:Checking exceptions
2025-09-14 21:08:25,356:INFO:Preloading libraries
2025-09-14 21:08:25,356:INFO:Set up data.
2025-09-14 21:08:25,358:INFO:Set up index.
2025-09-14 21:08:25,656:INFO:Initializing predict_model()
2025-09-14 21:08:25,656:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30dc68190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f4940e0>)
2025-09-14 21:08:25,656:INFO:Checking exceptions
2025-09-14 21:08:25,656:INFO:Preloading libraries
2025-09-14 21:08:25,656:INFO:Set up data.
2025-09-14 21:08:25,659:INFO:Set up index.
2025-09-14 21:08:26,146:INFO:Initializing predict_model()
2025-09-14 21:08:26,146:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309e061d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e2f420>)
2025-09-14 21:08:26,146:INFO:Checking exceptions
2025-09-14 21:08:26,146:INFO:Preloading libraries
2025-09-14 21:08:26,146:INFO:Set up data.
2025-09-14 21:08:26,148:INFO:Set up index.
2025-09-14 21:08:26,401:INFO:Initializing predict_model()
2025-09-14 21:08:26,402:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x107b34c10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e2e700>)
2025-09-14 21:08:26,402:INFO:Checking exceptions
2025-09-14 21:08:26,402:INFO:Preloading libraries
2025-09-14 21:08:26,402:INFO:Set up data.
2025-09-14 21:08:26,404:INFO:Set up index.
2025-09-14 21:08:26,790:INFO:Initializing predict_model()
2025-09-14 21:08:26,790:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30dbec450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30db6bec0>)
2025-09-14 21:08:26,790:INFO:Checking exceptions
2025-09-14 21:08:26,790:INFO:Preloading libraries
2025-09-14 21:08:26,790:INFO:Set up data.
2025-09-14 21:08:26,792:INFO:Set up index.
2025-09-14 21:08:27,284:INFO:Initializing predict_model()
2025-09-14 21:08:27,284:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309e0c6d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e2e5c0>)
2025-09-14 21:08:27,284:INFO:Checking exceptions
2025-09-14 21:08:27,284:INFO:Preloading libraries
2025-09-14 21:08:27,284:INFO:Set up data.
2025-09-14 21:08:27,289:INFO:Set up index.
2025-09-14 21:08:27,605:INFO:Initializing predict_model()
2025-09-14 21:08:27,605:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30dc40150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e2f420>)
2025-09-14 21:08:27,605:INFO:Checking exceptions
2025-09-14 21:08:27,605:INFO:Preloading libraries
2025-09-14 21:08:27,606:INFO:Set up data.
2025-09-14 21:08:27,607:INFO:Set up index.
2025-09-14 21:08:27,889:INFO:Initializing predict_model()
2025-09-14 21:08:27,889:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1072c8610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e2f240>)
2025-09-14 21:08:27,889:INFO:Checking exceptions
2025-09-14 21:08:27,889:INFO:Preloading libraries
2025-09-14 21:08:27,890:INFO:Set up data.
2025-09-14 21:08:27,893:INFO:Set up index.
2025-09-14 21:08:28,163:INFO:Initializing predict_model()
2025-09-14 21:08:28,163:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309df8e90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e2e8e0>)
2025-09-14 21:08:28,163:INFO:Checking exceptions
2025-09-14 21:08:28,163:INFO:Preloading libraries
2025-09-14 21:08:28,164:INFO:Set up data.
2025-09-14 21:08:28,165:INFO:Set up index.
2025-09-14 21:08:28,754:INFO:Initializing predict_model()
2025-09-14 21:08:28,754:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309fa1d10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e2e840>)
2025-09-14 21:08:28,755:INFO:Checking exceptions
2025-09-14 21:08:28,755:INFO:Preloading libraries
2025-09-14 21:08:28,755:INFO:Set up data.
2025-09-14 21:08:28,759:INFO:Set up index.
2025-09-14 21:08:29,617:INFO:Initializing predict_model()
2025-09-14 21:08:29,617:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30aa3bb90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309d7efc0>)
2025-09-14 21:08:29,617:INFO:Checking exceptions
2025-09-14 21:08:29,617:INFO:Preloading libraries
2025-09-14 21:08:29,617:INFO:Set up data.
2025-09-14 21:08:29,620:INFO:Set up index.
2025-09-14 21:08:30,674:INFO:Initializing predict_model()
2025-09-14 21:08:30,674:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309df3190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30db69260>)
2025-09-14 21:08:30,674:INFO:Checking exceptions
2025-09-14 21:08:30,674:INFO:Preloading libraries
2025-09-14 21:08:30,674:INFO:Set up data.
2025-09-14 21:08:30,678:INFO:Set up index.
2025-09-14 21:08:31,910:INFO:Initializing predict_model()
2025-09-14 21:08:31,911:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309e07150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x106082340>)
2025-09-14 21:08:31,911:INFO:Checking exceptions
2025-09-14 21:08:31,911:INFO:Preloading libraries
2025-09-14 21:08:31,911:INFO:Set up data.
2025-09-14 21:08:31,913:INFO:Set up index.
2025-09-14 21:08:37,699:INFO:Initializing predict_model()
2025-09-14 21:08:37,699:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3097ca910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30db69300>)
2025-09-14 21:08:37,700:INFO:Checking exceptions
2025-09-14 21:08:37,700:INFO:Preloading libraries
2025-09-14 21:08:37,700:INFO:Set up data.
2025-09-14 21:08:37,703:INFO:Set up index.
2025-09-14 21:08:42,336:INFO:Initializing predict_model()
2025-09-14 21:08:42,336:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30db83d10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e2e480>)
2025-09-14 21:08:42,336:INFO:Checking exceptions
2025-09-14 21:08:42,336:INFO:Preloading libraries
2025-09-14 21:08:42,337:INFO:Set up data.
2025-09-14 21:08:42,339:INFO:Set up index.
2025-09-14 21:08:45,528:INFO:Initializing predict_model()
2025-09-14 21:08:45,529:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309da52d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309d7efc0>)
2025-09-14 21:08:45,529:INFO:Checking exceptions
2025-09-14 21:08:45,529:INFO:Preloading libraries
2025-09-14 21:08:45,529:INFO:Set up data.
2025-09-14 21:08:45,532:INFO:Set up index.
2025-09-14 21:08:45,756:INFO:Initializing predict_model()
2025-09-14 21:08:45,756:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309e058d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e2e700>)
2025-09-14 21:08:45,756:INFO:Checking exceptions
2025-09-14 21:08:45,756:INFO:Preloading libraries
2025-09-14 21:08:45,757:INFO:Set up data.
2025-09-14 21:08:45,760:INFO:Set up index.
2025-09-14 21:08:45,989:INFO:Initializing predict_model()
2025-09-14 21:08:45,989:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30aa3b090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e2e480>)
2025-09-14 21:08:45,989:INFO:Checking exceptions
2025-09-14 21:08:45,989:INFO:Preloading libraries
2025-09-14 21:08:45,989:INFO:Set up data.
2025-09-14 21:08:45,991:INFO:Set up index.
2025-09-14 21:08:46,247:INFO:Initializing predict_model()
2025-09-14 21:08:46,248:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309e04890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e2e2a0>)
2025-09-14 21:08:46,248:INFO:Checking exceptions
2025-09-14 21:08:46,248:INFO:Preloading libraries
2025-09-14 21:08:46,248:INFO:Set up data.
2025-09-14 21:08:46,249:INFO:Set up index.
2025-09-14 21:08:46,527:INFO:Initializing predict_model()
2025-09-14 21:08:46,527:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30dc57190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30db69300>)
2025-09-14 21:08:46,527:INFO:Checking exceptions
2025-09-14 21:08:46,527:INFO:Preloading libraries
2025-09-14 21:08:46,527:INFO:Set up data.
2025-09-14 21:08:46,529:INFO:Set up index.
2025-09-14 21:08:46,812:INFO:Initializing predict_model()
2025-09-14 21:08:46,812:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30dc0e710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e2e8e0>)
2025-09-14 21:08:46,812:INFO:Checking exceptions
2025-09-14 21:08:46,812:INFO:Preloading libraries
2025-09-14 21:08:46,812:INFO:Set up data.
2025-09-14 21:08:46,814:INFO:Set up index.
2025-09-14 21:08:47,042:INFO:Initializing predict_model()
2025-09-14 21:08:47,042:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309da6950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3082bd120>)
2025-09-14 21:08:47,042:INFO:Checking exceptions
2025-09-14 21:08:47,042:INFO:Preloading libraries
2025-09-14 21:08:47,042:INFO:Set up data.
2025-09-14 21:08:47,044:INFO:Set up index.
2025-09-14 21:08:48,779:INFO:Initializing predict_model()
2025-09-14 21:08:48,779:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309bdfd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e2e2a0>)
2025-09-14 21:08:48,779:INFO:Checking exceptions
2025-09-14 21:08:48,779:INFO:Preloading libraries
2025-09-14 21:08:48,779:INFO:Set up data.
2025-09-14 21:08:48,781:INFO:Set up index.
2025-09-14 21:08:53,801:INFO:Initializing predict_model()
2025-09-14 21:08:53,801:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309bf82d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e2e700>)
2025-09-14 21:08:53,801:INFO:Checking exceptions
2025-09-14 21:08:53,801:INFO:Preloading libraries
2025-09-14 21:08:53,801:INFO:Set up data.
2025-09-14 21:08:53,803:INFO:Set up index.
2025-09-14 21:08:57,688:INFO:Initializing predict_model()
2025-09-14 21:08:57,688:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30db7ed10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309ff04a0>)
2025-09-14 21:08:57,688:INFO:Checking exceptions
2025-09-14 21:08:57,689:INFO:Preloading libraries
2025-09-14 21:08:57,689:INFO:Set up data.
2025-09-14 21:08:57,691:INFO:Set up index.
2025-09-14 21:09:03,894:INFO:Initializing predict_model()
2025-09-14 21:09:03,894:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30dc0e550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x10604e3e0>)
2025-09-14 21:09:03,894:INFO:Checking exceptions
2025-09-14 21:09:03,894:INFO:Preloading libraries
2025-09-14 21:09:03,894:INFO:Set up data.
2025-09-14 21:09:03,896:INFO:Set up index.
2025-09-14 21:09:07,518:INFO:Initializing predict_model()
2025-09-14 21:09:07,519:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3082ba7d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e2e840>)
2025-09-14 21:09:07,519:INFO:Checking exceptions
2025-09-14 21:09:07,519:INFO:Preloading libraries
2025-09-14 21:09:07,519:INFO:Set up data.
2025-09-14 21:09:07,520:INFO:Set up index.
2025-09-14 21:09:29,314:INFO:Initializing predict_model()
2025-09-14 21:09:29,315:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309dfed90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x107727100>)
2025-09-14 21:09:29,315:INFO:Checking exceptions
2025-09-14 21:09:29,315:INFO:Preloading libraries
2025-09-14 21:09:29,315:INFO:Set up data.
2025-09-14 21:09:29,318:INFO:Set up index.
2025-09-14 21:09:42,316:INFO:Initializing predict_model()
2025-09-14 21:09:42,316:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30db6c850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16da2d120>)
2025-09-14 21:09:42,316:INFO:Checking exceptions
2025-09-14 21:09:42,317:INFO:Preloading libraries
2025-09-14 21:09:42,317:INFO:Set up data.
2025-09-14 21:09:42,321:INFO:Set up index.
2025-09-14 21:18:48,863:INFO:Initializing predict_model()
2025-09-14 21:18:48,863:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30aa54250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309d7f100>)
2025-09-14 21:18:48,863:INFO:Checking exceptions
2025-09-14 21:18:48,863:INFO:Preloading libraries
2025-09-14 21:18:48,863:INFO:Set up data.
2025-09-14 21:18:48,866:INFO:Set up index.
2025-09-14 21:18:51,217:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 21:18:53,313:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:18:53,313:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:18:53,313:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:18:53,313:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:18:53,495:INFO:Initializing load_model()
2025-09-14 21:18:53,495:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:18:54,438:INFO:Initializing predict_model()
2025-09-14 21:18:54,439:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16cecc590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16ceee840>)
2025-09-14 21:18:54,439:INFO:Checking exceptions
2025-09-14 21:18:54,439:INFO:Preloading libraries
2025-09-14 21:18:54,439:INFO:Set up data.
2025-09-14 21:18:54,443:INFO:Set up index.
2025-09-14 21:18:54,534:INFO:Initializing predict_model()
2025-09-14 21:18:54,534:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16ced1a90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16dab8a40>)
2025-09-14 21:18:54,534:INFO:Checking exceptions
2025-09-14 21:18:54,534:INFO:Preloading libraries
2025-09-14 21:18:54,534:INFO:Set up data.
2025-09-14 21:18:54,535:INFO:Set up index.
2025-09-14 21:33:29,240:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:33:29,244:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:33:29,244:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:33:29,244:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:33:29,300:INFO:Initializing load_model()
2025-09-14 21:33:29,300:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:33:29,483:INFO:Initializing predict_model()
2025-09-14 21:33:29,483:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1631a3b10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x162e83c40>)
2025-09-14 21:33:29,483:INFO:Checking exceptions
2025-09-14 21:33:29,483:INFO:Preloading libraries
2025-09-14 21:33:29,483:INFO:Set up data.
2025-09-14 21:33:29,486:INFO:Set up index.
2025-09-14 21:33:48,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:33:48,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:33:48,335:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:33:48,336:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:33:48,386:INFO:Initializing load_model()
2025-09-14 21:33:48,386:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:33:48,547:INFO:Initializing predict_model()
2025-09-14 21:33:48,547:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30c02d2d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30cc963e0>)
2025-09-14 21:33:48,547:INFO:Checking exceptions
2025-09-14 21:33:48,547:INFO:Preloading libraries
2025-09-14 21:33:48,547:INFO:Set up data.
2025-09-14 21:33:48,549:INFO:Set up index.
2025-09-14 21:35:22,633:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:35:22,634:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:35:22,634:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:35:22,634:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:35:22,685:INFO:Initializing load_model()
2025-09-14 21:35:22,686:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:35:22,846:INFO:Initializing predict_model()
2025-09-14 21:35:22,846:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x163e7c790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x163a37b00>)
2025-09-14 21:35:22,846:INFO:Checking exceptions
2025-09-14 21:35:22,847:INFO:Preloading libraries
2025-09-14 21:35:22,847:INFO:Set up data.
2025-09-14 21:35:22,849:INFO:Set up index.
2025-09-14 21:37:00,301:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:37:00,304:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:37:00,304:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:37:00,304:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:37:00,698:INFO:Initializing load_model()
2025-09-14 21:37:00,698:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:37:15,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:37:15,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:37:15,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:37:15,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:37:15,900:INFO:Initializing load_model()
2025-09-14 21:37:15,900:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:37:32,361:INFO:Initializing load_model()
2025-09-14 21:37:32,361:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:37:32,403:INFO:Initializing predict_model()
2025-09-14 21:37:32,403:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x308ca4850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x306a193a0>)
2025-09-14 21:37:32,403:INFO:Checking exceptions
2025-09-14 21:37:32,403:INFO:Preloading libraries
2025-09-14 21:37:32,408:INFO:Set up data.
2025-09-14 21:37:32,411:INFO:Set up index.
2025-09-14 21:40:48,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:40:48,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:40:48,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:40:48,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:40:48,374:INFO:Initializing load_model()
2025-09-14 21:40:48,374:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:40:54,433:INFO:Initializing load_model()
2025-09-14 21:40:54,433:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:40:54,476:INFO:Initializing predict_model()
2025-09-14 21:40:54,476:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30bf08250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e19a80>)
2025-09-14 21:40:54,476:INFO:Checking exceptions
2025-09-14 21:40:54,476:INFO:Preloading libraries
2025-09-14 21:40:54,476:INFO:Set up data.
2025-09-14 21:40:54,480:INFO:Set up index.
2025-09-14 21:41:10,177:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 21:41:12,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:41:12,011:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:41:12,011:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:41:12,011:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:41:12,160:INFO:Initializing load_model()
2025-09-14 21:41:12,160:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:41:13,037:INFO:Initializing predict_model()
2025-09-14 21:41:13,037:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15f958d90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15fc2f4c0>)
2025-09-14 21:41:13,037:INFO:Checking exceptions
2025-09-14 21:41:13,037:INFO:Preloading libraries
2025-09-14 21:41:13,037:INFO:Set up data.
2025-09-14 21:41:13,042:INFO:Set up index.
2025-09-14 21:41:13,134:INFO:Initializing predict_model()
2025-09-14 21:41:13,134:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15eab3d10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15fb08ae0>)
2025-09-14 21:41:13,134:INFO:Checking exceptions
2025-09-14 21:41:13,134:INFO:Preloading libraries
2025-09-14 21:41:13,134:INFO:Set up data.
2025-09-14 21:41:13,135:INFO:Set up index.
2025-09-14 21:41:39,159:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 21:41:40,954:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:41:40,954:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:41:40,954:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:41:40,954:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:41:41,329:INFO:Initializing load_model()
2025-09-14 21:41:41,329:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:41:42,159:INFO:Initializing predict_model()
2025-09-14 21:41:42,159:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x156c54c10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1569ac360>)
2025-09-14 21:41:42,159:INFO:Checking exceptions
2025-09-14 21:41:42,159:INFO:Preloading libraries
2025-09-14 21:41:42,160:INFO:Set up data.
2025-09-14 21:41:42,164:INFO:Set up index.
2025-09-14 21:41:42,257:INFO:Initializing predict_model()
2025-09-14 21:41:42,257:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1558346d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x155f171a0>)
2025-09-14 21:41:42,257:INFO:Checking exceptions
2025-09-14 21:41:42,257:INFO:Preloading libraries
2025-09-14 21:41:42,257:INFO:Set up data.
2025-09-14 21:41:42,259:INFO:Set up index.
2025-09-14 21:41:48,729:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 21:41:48,753:INFO:Initializing load_model()
2025-09-14 21:41:48,753:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:41:49,523:INFO:Initializing predict_model()
2025-09-14 21:41:49,523:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f62c850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f619300>)
2025-09-14 21:41:49,523:INFO:Checking exceptions
2025-09-14 21:41:49,523:INFO:Preloading libraries
2025-09-14 21:41:49,523:INFO:Set up data.
2025-09-14 21:41:49,528:INFO:Set up index.
2025-09-14 21:41:49,652:INFO:Initializing predict_model()
2025-09-14 21:41:49,652:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f3cf390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f5dfce0>)
2025-09-14 21:41:49,653:INFO:Checking exceptions
2025-09-14 21:41:49,653:INFO:Preloading libraries
2025-09-14 21:41:49,653:INFO:Set up data.
2025-09-14 21:41:49,659:INFO:Set up index.
2025-09-14 21:46:43,929:INFO:Initializing predict_model()
2025-09-14 21:46:43,929:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309c13510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x106901300>)
2025-09-14 21:46:43,929:INFO:Checking exceptions
2025-09-14 21:46:43,929:INFO:Preloading libraries
2025-09-14 21:46:43,930:INFO:Set up data.
2025-09-14 21:46:43,938:INFO:Set up index.
2025-09-14 21:46:46,522:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 21:46:48,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:46:48,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:46:48,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:46:48,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:46:49,227:INFO:Initializing load_model()
2025-09-14 21:46:49,227:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:46:50,043:INFO:Initializing predict_model()
2025-09-14 21:46:50,043:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1601551d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f48c400>)
2025-09-14 21:46:50,043:INFO:Checking exceptions
2025-09-14 21:46:50,043:INFO:Preloading libraries
2025-09-14 21:46:50,044:INFO:Set up data.
2025-09-14 21:46:50,047:INFO:Set up index.
2025-09-14 21:46:50,143:INFO:Initializing predict_model()
2025-09-14 21:46:50,143:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15f45de10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f2f71a0>)
2025-09-14 21:46:50,143:INFO:Checking exceptions
2025-09-14 21:46:50,143:INFO:Preloading libraries
2025-09-14 21:46:50,143:INFO:Set up data.
2025-09-14 21:46:50,144:INFO:Set up index.
2025-09-14 21:47:09,002:INFO:Initializing predict_model()
2025-09-14 21:47:09,003:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f41ebd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e19b20>)
2025-09-14 21:47:09,003:INFO:Checking exceptions
2025-09-14 21:47:09,003:INFO:Preloading libraries
2025-09-14 21:47:09,003:INFO:Set up data.
2025-09-14 21:47:09,006:INFO:Set up index.
2025-09-14 21:50:48,517:INFO:Initializing predict_model()
2025-09-14 21:50:48,517:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309c92050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e19440>)
2025-09-14 21:50:48,517:INFO:Checking exceptions
2025-09-14 21:50:48,517:INFO:Preloading libraries
2025-09-14 21:50:48,517:INFO:Set up data.
2025-09-14 21:50:48,520:INFO:Set up index.
2025-09-14 21:50:50,840:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 21:50:52,872:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:50:52,872:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:50:52,872:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:50:52,872:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:50:53,370:INFO:Initializing load_model()
2025-09-14 21:50:53,370:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:50:54,503:INFO:Initializing predict_model()
2025-09-14 21:50:54,504:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160ca39d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x160cd8400>)
2025-09-14 21:50:54,504:INFO:Checking exceptions
2025-09-14 21:50:54,504:INFO:Preloading libraries
2025-09-14 21:50:54,504:INFO:Set up data.
2025-09-14 21:50:54,508:INFO:Set up index.
2025-09-14 21:50:54,604:INFO:Initializing predict_model()
2025-09-14 21:50:54,604:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15f3b3ed0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x160b431a0>)
2025-09-14 21:50:54,604:INFO:Checking exceptions
2025-09-14 21:50:54,604:INFO:Preloading libraries
2025-09-14 21:50:54,604:INFO:Set up data.
2025-09-14 21:50:54,605:INFO:Set up index.
2025-09-14 21:52:35,594:INFO:Initializing predict_model()
2025-09-14 21:52:35,595:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f272e90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309e196c0>)
2025-09-14 21:52:35,595:INFO:Checking exceptions
2025-09-14 21:52:35,595:INFO:Preloading libraries
2025-09-14 21:52:35,595:INFO:Set up data.
2025-09-14 21:52:35,598:INFO:Set up index.
2025-09-14 21:52:37,662:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 21:52:39,545:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:52:39,545:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:52:39,545:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:52:39,545:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:52:39,922:INFO:Initializing load_model()
2025-09-14 21:52:39,922:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:52:40,839:INFO:Initializing predict_model()
2025-09-14 21:52:40,839:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17a518fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17b5744a0>)
2025-09-14 21:52:40,839:INFO:Checking exceptions
2025-09-14 21:52:40,839:INFO:Preloading libraries
2025-09-14 21:52:40,839:INFO:Set up data.
2025-09-14 21:52:40,843:INFO:Set up index.
2025-09-14 21:52:40,936:INFO:Initializing predict_model()
2025-09-14 21:52:40,937:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17a2f7f90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17b3df1a0>)
2025-09-14 21:52:40,937:INFO:Checking exceptions
2025-09-14 21:52:40,937:INFO:Preloading libraries
2025-09-14 21:52:40,937:INFO:Set up data.
2025-09-14 21:52:40,938:INFO:Set up index.
2025-09-14 21:53:23,554:INFO:Initializing predict_model()
2025-09-14 21:53:23,554:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3086929d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x168edcc20>)
2025-09-14 21:53:23,554:INFO:Checking exceptions
2025-09-14 21:53:23,555:INFO:Preloading libraries
2025-09-14 21:53:23,555:INFO:Set up data.
2025-09-14 21:53:23,557:INFO:Set up index.
2025-09-14 21:53:25,747:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 21:53:27,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:53:27,719:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:53:27,719:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:53:27,719:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:53:28,110:INFO:Initializing load_model()
2025-09-14 21:53:28,110:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:53:29,837:INFO:Initializing predict_model()
2025-09-14 21:53:29,837:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16934ffd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16f37d940>)
2025-09-14 21:53:29,837:INFO:Checking exceptions
2025-09-14 21:53:29,838:INFO:Preloading libraries
2025-09-14 21:53:29,838:INFO:Set up data.
2025-09-14 21:53:29,843:INFO:Set up index.
2025-09-14 21:53:29,940:INFO:Initializing predict_model()
2025-09-14 21:53:29,940:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16baea990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16a9171a0>)
2025-09-14 21:53:29,940:INFO:Checking exceptions
2025-09-14 21:53:29,940:INFO:Preloading libraries
2025-09-14 21:53:29,940:INFO:Set up data.
2025-09-14 21:53:29,941:INFO:Set up index.
2025-09-14 21:53:32,116:INFO:Initializing predict_model()
2025-09-14 21:53:32,117:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30bf0c490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307111da0>)
2025-09-14 21:53:32,117:INFO:Checking exceptions
2025-09-14 21:53:32,117:INFO:Preloading libraries
2025-09-14 21:53:32,117:INFO:Set up data.
2025-09-14 21:53:32,119:INFO:Set up index.
2025-09-14 21:53:33,834:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 21:53:35,630:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:53:35,631:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:53:35,631:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:53:35,631:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:53:35,994:INFO:Initializing load_model()
2025-09-14 21:53:35,995:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:53:37,645:INFO:Initializing predict_model()
2025-09-14 21:53:37,646:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f01f910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16bd484a0>)
2025-09-14 21:53:37,646:INFO:Checking exceptions
2025-09-14 21:53:37,646:INFO:Preloading libraries
2025-09-14 21:53:37,646:INFO:Set up data.
2025-09-14 21:53:37,648:INFO:Set up index.
2025-09-14 21:53:37,738:INFO:Initializing predict_model()
2025-09-14 21:53:37,738:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f007d10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16b7171a0>)
2025-09-14 21:53:37,738:INFO:Checking exceptions
2025-09-14 21:53:37,738:INFO:Preloading libraries
2025-09-14 21:53:37,738:INFO:Set up data.
2025-09-14 21:53:37,740:INFO:Set up index.
2025-09-14 21:55:39,103:INFO:Initializing predict_model()
2025-09-14 21:55:39,105:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1064bb810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309b391c0>)
2025-09-14 21:55:39,105:INFO:Checking exceptions
2025-09-14 21:55:39,106:INFO:Preloading libraries
2025-09-14 21:55:39,106:INFO:Set up data.
2025-09-14 21:55:39,108:INFO:Set up index.
2025-09-14 21:55:41,357:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 21:55:43,296:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:55:43,296:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:55:43,296:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:55:43,296:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:55:43,673:INFO:Initializing load_model()
2025-09-14 21:55:43,673:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:55:46,401:INFO:Initializing predict_model()
2025-09-14 21:55:46,402:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1625c67d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1630e4400>)
2025-09-14 21:55:46,402:INFO:Checking exceptions
2025-09-14 21:55:46,402:INFO:Preloading libraries
2025-09-14 21:55:46,402:INFO:Set up data.
2025-09-14 21:55:46,405:INFO:Set up index.
2025-09-14 21:55:46,514:INFO:Initializing predict_model()
2025-09-14 21:55:46,514:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1630a9c90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x162f4f1a0>)
2025-09-14 21:55:46,514:INFO:Checking exceptions
2025-09-14 21:55:46,515:INFO:Preloading libraries
2025-09-14 21:55:46,515:INFO:Set up data.
2025-09-14 21:55:46,516:INFO:Set up index.
2025-09-14 21:57:50,992:INFO:Initializing predict_model()
2025-09-14 21:57:50,998:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3136c8090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30cf5f1a0>)
2025-09-14 21:57:50,998:INFO:Checking exceptions
2025-09-14 21:57:50,998:INFO:Preloading libraries
2025-09-14 21:57:50,998:INFO:Set up data.
2025-09-14 21:57:51,000:INFO:Set up index.
2025-09-14 21:57:53,128:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 21:57:55,031:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:57:55,031:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:57:55,031:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:57:55,031:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:57:55,412:INFO:Initializing load_model()
2025-09-14 21:57:55,412:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:57:56,419:INFO:Initializing predict_model()
2025-09-14 21:57:56,419:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16bbd6110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16bd5c540>)
2025-09-14 21:57:56,419:INFO:Checking exceptions
2025-09-14 21:57:56,419:INFO:Preloading libraries
2025-09-14 21:57:56,419:INFO:Set up data.
2025-09-14 21:57:56,424:INFO:Set up index.
2025-09-14 21:57:56,517:INFO:Initializing predict_model()
2025-09-14 21:57:56,518:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b4f5f90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16bbc71a0>)
2025-09-14 21:57:56,518:INFO:Checking exceptions
2025-09-14 21:57:56,518:INFO:Preloading libraries
2025-09-14 21:57:56,518:INFO:Set up data.
2025-09-14 21:57:56,519:INFO:Set up index.
2025-09-14 21:58:47,434:INFO:Initializing predict_model()
2025-09-14 21:58:47,440:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30bdff590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30cf7e3e0>)
2025-09-14 21:58:47,440:INFO:Checking exceptions
2025-09-14 21:58:47,440:INFO:Preloading libraries
2025-09-14 21:58:47,440:INFO:Set up data.
2025-09-14 21:58:47,443:INFO:Set up index.
2025-09-14 21:58:49,566:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 21:58:51,485:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:58:51,485:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:58:51,485:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:58:51,485:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 21:58:51,873:INFO:Initializing load_model()
2025-09-14 21:58:51,873:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 21:58:52,361:INFO:Initializing predict_model()
2025-09-14 21:58:52,361:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1731ec310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1765c0720>)
2025-09-14 21:58:52,361:INFO:Checking exceptions
2025-09-14 21:58:52,361:INFO:Preloading libraries
2025-09-14 21:58:52,361:INFO:Set up data.
2025-09-14 21:58:52,365:INFO:Set up index.
2025-09-14 21:58:52,461:INFO:Initializing predict_model()
2025-09-14 21:58:52,461:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1731df450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1730871a0>)
2025-09-14 21:58:52,461:INFO:Checking exceptions
2025-09-14 21:58:52,461:INFO:Preloading libraries
2025-09-14 21:58:52,461:INFO:Set up data.
2025-09-14 21:58:52,462:INFO:Set up index.
2025-09-14 22:00:05,717:INFO:Initializing predict_model()
2025-09-14 22:00:05,719:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30bb10090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30cf7d440>)
2025-09-14 22:00:05,719:INFO:Checking exceptions
2025-09-14 22:00:05,719:INFO:Preloading libraries
2025-09-14 22:00:05,720:INFO:Set up data.
2025-09-14 22:00:05,723:INFO:Set up index.
2025-09-14 22:00:07,987:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:00:09,941:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:00:09,941:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:00:09,941:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:00:09,941:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:00:10,321:INFO:Initializing load_model()
2025-09-14 22:00:10,321:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:00:10,971:INFO:Initializing predict_model()
2025-09-14 22:00:10,971:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16e583d10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16e5ac360>)
2025-09-14 22:00:10,971:INFO:Checking exceptions
2025-09-14 22:00:10,971:INFO:Preloading libraries
2025-09-14 22:00:10,971:INFO:Set up data.
2025-09-14 22:00:10,974:INFO:Set up index.
2025-09-14 22:00:11,059:INFO:Initializing predict_model()
2025-09-14 22:00:11,059:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16e579ad0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16e30b1a0>)
2025-09-14 22:00:11,059:INFO:Checking exceptions
2025-09-14 22:00:11,059:INFO:Preloading libraries
2025-09-14 22:00:11,059:INFO:Set up data.
2025-09-14 22:00:11,061:INFO:Set up index.
2025-09-14 22:03:11,699:INFO:Initializing predict_model()
2025-09-14 22:03:11,702:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30ba2a350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30cf7fd80>)
2025-09-14 22:03:11,702:INFO:Checking exceptions
2025-09-14 22:03:11,702:INFO:Preloading libraries
2025-09-14 22:03:11,703:INFO:Set up data.
2025-09-14 22:03:11,708:INFO:Set up index.
2025-09-14 22:03:11,962:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:03:11,963:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:03:11,963:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:03:13,843:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:03:15,774:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:03:15,785:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:03:15,785:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:03:15,785:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:03:16,170:INFO:Initializing load_model()
2025-09-14 22:03:16,170:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:03:17,016:INFO:Initializing predict_model()
2025-09-14 22:03:17,016:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15eb69590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15ebac360>)
2025-09-14 22:03:17,016:INFO:Checking exceptions
2025-09-14 22:03:17,016:INFO:Preloading libraries
2025-09-14 22:03:17,016:INFO:Set up data.
2025-09-14 22:03:17,020:INFO:Set up index.
2025-09-14 22:03:17,114:INFO:Initializing predict_model()
2025-09-14 22:03:17,114:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15eb752d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15ea171a0>)
2025-09-14 22:03:17,114:INFO:Checking exceptions
2025-09-14 22:03:17,114:INFO:Preloading libraries
2025-09-14 22:03:17,114:INFO:Set up data.
2025-09-14 22:03:17,116:INFO:Set up index.
2025-09-14 22:03:19,628:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:03:19,628:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:03:19,629:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:03:31,773:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:03:33,606:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:03:33,606:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:03:33,606:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:03:33,606:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:03:34,028:INFO:Initializing load_model()
2025-09-14 22:03:34,028:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:03:34,601:INFO:Initializing predict_model()
2025-09-14 22:03:34,601:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x308844750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30cd88720>)
2025-09-14 22:03:34,601:INFO:Checking exceptions
2025-09-14 22:03:34,601:INFO:Preloading libraries
2025-09-14 22:03:34,602:INFO:Set up data.
2025-09-14 22:03:34,605:INFO:Set up index.
2025-09-14 22:03:34,701:INFO:Initializing predict_model()
2025-09-14 22:03:34,701:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309acfd90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30cd887c0>)
2025-09-14 22:03:34,701:INFO:Checking exceptions
2025-09-14 22:03:34,701:INFO:Preloading libraries
2025-09-14 22:03:34,701:INFO:Set up data.
2025-09-14 22:03:34,703:INFO:Set up index.
2025-09-14 22:03:37,134:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:03:37,135:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:03:37,135:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:14,446:INFO:Initializing predict_model()
2025-09-14 22:04:14,448:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30d1201d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1061525c0>)
2025-09-14 22:04:14,448:INFO:Checking exceptions
2025-09-14 22:04:14,448:INFO:Preloading libraries
2025-09-14 22:04:14,451:INFO:Set up data.
2025-09-14 22:04:14,459:INFO:Set up index.
2025-09-14 22:04:14,645:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:14,646:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:14,646:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:14,794:INFO:Initializing predict_model()
2025-09-14 22:04:14,794:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30d1b8190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309b52ac0>)
2025-09-14 22:04:14,794:INFO:Checking exceptions
2025-09-14 22:04:14,794:INFO:Preloading libraries
2025-09-14 22:04:14,794:INFO:Set up data.
2025-09-14 22:04:14,795:INFO:Set up index.
2025-09-14 22:04:14,901:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:14,902:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:14,902:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:14,991:INFO:Initializing predict_model()
2025-09-14 22:04:14,991:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30d905610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309b520c0>)
2025-09-14 22:04:14,991:INFO:Checking exceptions
2025-09-14 22:04:14,991:INFO:Preloading libraries
2025-09-14 22:04:14,991:INFO:Set up data.
2025-09-14 22:04:14,993:INFO:Set up index.
2025-09-14 22:04:15,095:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:15,095:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:15,095:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:15,183:INFO:Initializing predict_model()
2025-09-14 22:04:15,184:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x106702bd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309b52ac0>)
2025-09-14 22:04:15,184:INFO:Checking exceptions
2025-09-14 22:04:15,184:INFO:Preloading libraries
2025-09-14 22:04:15,184:INFO:Set up data.
2025-09-14 22:04:15,185:INFO:Set up index.
2025-09-14 22:04:15,277:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:15,277:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:15,278:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:15,367:INFO:Initializing predict_model()
2025-09-14 22:04:15,367:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30d90f910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30b68b1a0>)
2025-09-14 22:04:15,367:INFO:Checking exceptions
2025-09-14 22:04:15,367:INFO:Preloading libraries
2025-09-14 22:04:15,367:INFO:Set up data.
2025-09-14 22:04:15,369:INFO:Set up index.
2025-09-14 22:04:15,460:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:15,460:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:15,460:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:15,613:INFO:Initializing predict_model()
2025-09-14 22:04:15,614:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x167593e10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30b68a7a0>)
2025-09-14 22:04:15,614:INFO:Checking exceptions
2025-09-14 22:04:15,614:INFO:Preloading libraries
2025-09-14 22:04:15,614:INFO:Set up data.
2025-09-14 22:04:15,616:INFO:Set up index.
2025-09-14 22:04:15,713:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:15,714:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:15,714:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:23,179:INFO:Initializing predict_model()
2025-09-14 22:04:23,179:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30c9d1390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x104a4e340>)
2025-09-14 22:04:23,179:INFO:Checking exceptions
2025-09-14 22:04:23,179:INFO:Preloading libraries
2025-09-14 22:04:23,180:INFO:Set up data.
2025-09-14 22:04:23,182:INFO:Set up index.
2025-09-14 22:04:23,286:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:23,286:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:23,286:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:26,108:INFO:Initializing predict_model()
2025-09-14 22:04:26,108:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30d90f610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30b689120>)
2025-09-14 22:04:26,108:INFO:Checking exceptions
2025-09-14 22:04:26,108:INFO:Preloading libraries
2025-09-14 22:04:26,109:INFO:Set up data.
2025-09-14 22:04:26,112:INFO:Set up index.
2025-09-14 22:04:26,207:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:26,207:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:26,207:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:27,257:INFO:Initializing predict_model()
2025-09-14 22:04:27,257:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1065f2810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30b68b240>)
2025-09-14 22:04:27,257:INFO:Checking exceptions
2025-09-14 22:04:27,257:INFO:Preloading libraries
2025-09-14 22:04:27,257:INFO:Set up data.
2025-09-14 22:04:27,260:INFO:Set up index.
2025-09-14 22:04:27,349:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:27,349:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:27,350:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:28,029:INFO:Initializing predict_model()
2025-09-14 22:04:28,029:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30a6bbe10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309ab0900>)
2025-09-14 22:04:28,029:INFO:Checking exceptions
2025-09-14 22:04:28,029:INFO:Preloading libraries
2025-09-14 22:04:28,029:INFO:Set up data.
2025-09-14 22:04:28,032:INFO:Set up index.
2025-09-14 22:04:28,126:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:28,127:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:28,127:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:28,318:INFO:Initializing predict_model()
2025-09-14 22:04:28,318:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30969ff50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30b689120>)
2025-09-14 22:04:28,318:INFO:Checking exceptions
2025-09-14 22:04:28,319:INFO:Preloading libraries
2025-09-14 22:04:28,319:INFO:Set up data.
2025-09-14 22:04:28,324:INFO:Set up index.
2025-09-14 22:04:28,413:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:28,413:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:28,413:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:28,626:INFO:Initializing predict_model()
2025-09-14 22:04:28,626:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309b1ed90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x167594180>)
2025-09-14 22:04:28,626:INFO:Checking exceptions
2025-09-14 22:04:28,626:INFO:Preloading libraries
2025-09-14 22:04:28,626:INFO:Set up data.
2025-09-14 22:04:28,629:INFO:Set up index.
2025-09-14 22:04:28,715:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:28,715:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:28,715:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:28,890:INFO:Initializing predict_model()
2025-09-14 22:04:28,890:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30d952110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x106ce99e0>)
2025-09-14 22:04:28,890:INFO:Checking exceptions
2025-09-14 22:04:28,890:INFO:Preloading libraries
2025-09-14 22:04:28,890:INFO:Set up data.
2025-09-14 22:04:28,894:INFO:Set up index.
2025-09-14 22:04:28,991:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:28,992:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:28,992:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:29,133:INFO:Initializing predict_model()
2025-09-14 22:04:29,133:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1060fc2d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30b689440>)
2025-09-14 22:04:29,133:INFO:Checking exceptions
2025-09-14 22:04:29,133:INFO:Preloading libraries
2025-09-14 22:04:29,133:INFO:Set up data.
2025-09-14 22:04:29,135:INFO:Set up index.
2025-09-14 22:04:29,227:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:29,227:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:29,227:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:29,399:INFO:Initializing predict_model()
2025-09-14 22:04:29,399:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30d1b8e90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30b688360>)
2025-09-14 22:04:29,399:INFO:Checking exceptions
2025-09-14 22:04:29,399:INFO:Preloading libraries
2025-09-14 22:04:29,399:INFO:Set up data.
2025-09-14 22:04:29,403:INFO:Set up index.
2025-09-14 22:04:29,487:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:29,487:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:29,488:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:29,670:INFO:Initializing predict_model()
2025-09-14 22:04:29,670:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30c9d0c50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30b68a5c0>)
2025-09-14 22:04:29,670:INFO:Checking exceptions
2025-09-14 22:04:29,670:INFO:Preloading libraries
2025-09-14 22:04:29,670:INFO:Set up data.
2025-09-14 22:04:29,672:INFO:Set up index.
2025-09-14 22:04:29,763:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:29,764:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:29,764:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:29,902:INFO:Initializing predict_model()
2025-09-14 22:04:29,902:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x308a0d710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x106704d60>)
2025-09-14 22:04:29,902:INFO:Checking exceptions
2025-09-14 22:04:29,902:INFO:Preloading libraries
2025-09-14 22:04:29,902:INFO:Set up data.
2025-09-14 22:04:29,903:INFO:Set up index.
2025-09-14 22:04:29,991:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:29,992:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:29,992:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:30,148:INFO:Initializing predict_model()
2025-09-14 22:04:30,149:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30d90f090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x106704d60>)
2025-09-14 22:04:30,149:INFO:Checking exceptions
2025-09-14 22:04:30,149:INFO:Preloading libraries
2025-09-14 22:04:30,149:INFO:Set up data.
2025-09-14 22:04:30,151:INFO:Set up index.
2025-09-14 22:04:30,238:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:30,239:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:30,239:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:30,380:INFO:Initializing predict_model()
2025-09-14 22:04:30,380:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x106424e90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30b6884a0>)
2025-09-14 22:04:30,380:INFO:Checking exceptions
2025-09-14 22:04:30,380:INFO:Preloading libraries
2025-09-14 22:04:30,380:INFO:Set up data.
2025-09-14 22:04:30,381:INFO:Set up index.
2025-09-14 22:04:30,468:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:30,468:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:30,468:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:38,970:INFO:Initializing predict_model()
2025-09-14 22:04:38,970:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30d900a90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30b689440>)
2025-09-14 22:04:38,970:INFO:Checking exceptions
2025-09-14 22:04:38,971:INFO:Preloading libraries
2025-09-14 22:04:38,971:INFO:Set up data.
2025-09-14 22:04:38,972:INFO:Set up index.
2025-09-14 22:04:39,062:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:39,063:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:39,063:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:44,527:INFO:Initializing predict_model()
2025-09-14 22:04:44,527:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30d903150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309b51760>)
2025-09-14 22:04:44,527:INFO:Checking exceptions
2025-09-14 22:04:44,527:INFO:Preloading libraries
2025-09-14 22:04:44,528:INFO:Set up data.
2025-09-14 22:04:44,530:INFO:Set up index.
2025-09-14 22:04:44,623:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:44,623:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:44,624:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:04:49,042:INFO:Initializing predict_model()
2025-09-14 22:04:49,042:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x167593e10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30b689620>)
2025-09-14 22:04:49,042:INFO:Checking exceptions
2025-09-14 22:04:49,043:INFO:Preloading libraries
2025-09-14 22:04:49,043:INFO:Set up data.
2025-09-14 22:04:49,046:INFO:Set up index.
2025-09-14 22:04:49,140:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:04:49,140:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:04:49,140:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:05:02,954:INFO:Initializing predict_model()
2025-09-14 22:05:02,954:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30c9d0c50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30cf55c60>)
2025-09-14 22:05:02,954:INFO:Checking exceptions
2025-09-14 22:05:02,954:INFO:Preloading libraries
2025-09-14 22:05:02,954:INFO:Set up data.
2025-09-14 22:05:02,957:INFO:Set up index.
2025-09-14 22:05:03,052:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:05:03,052:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:05:03,052:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:05:03,525:INFO:Initializing predict_model()
2025-09-14 22:05:03,525:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1060fe7d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30b68b060>)
2025-09-14 22:05:03,525:INFO:Checking exceptions
2025-09-14 22:05:03,525:INFO:Preloading libraries
2025-09-14 22:05:03,525:INFO:Set up data.
2025-09-14 22:05:03,528:INFO:Set up index.
2025-09-14 22:05:03,627:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:05:03,628:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:05:03,628:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:05:03,799:INFO:Initializing predict_model()
2025-09-14 22:05:03,799:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x106702a90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30b689440>)
2025-09-14 22:05:03,799:INFO:Checking exceptions
2025-09-14 22:05:03,799:INFO:Preloading libraries
2025-09-14 22:05:03,799:INFO:Set up data.
2025-09-14 22:05:03,801:INFO:Set up index.
2025-09-14 22:05:03,889:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:05:03,889:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:05:03,889:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:05:04,394:INFO:Initializing predict_model()
2025-09-14 22:05:04,394:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30d90e050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30b6893a0>)
2025-09-14 22:05:04,395:INFO:Checking exceptions
2025-09-14 22:05:04,395:INFO:Preloading libraries
2025-09-14 22:05:04,395:INFO:Set up data.
2025-09-14 22:05:04,398:INFO:Set up index.
2025-09-14 22:05:04,490:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:05:04,490:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:05:04,491:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:05:04,848:INFO:Initializing predict_model()
2025-09-14 22:05:04,848:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30d892a90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30b68b240>)
2025-09-14 22:05:04,848:INFO:Checking exceptions
2025-09-14 22:05:04,848:INFO:Preloading libraries
2025-09-14 22:05:04,848:INFO:Set up data.
2025-09-14 22:05:04,850:INFO:Set up index.
2025-09-14 22:05:04,974:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:05:04,974:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:05:04,975:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:05:05,206:INFO:Initializing predict_model()
2025-09-14 22:05:05,206:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30d933d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30b68a0c0>)
2025-09-14 22:05:05,206:INFO:Checking exceptions
2025-09-14 22:05:05,206:INFO:Preloading libraries
2025-09-14 22:05:05,206:INFO:Set up data.
2025-09-14 22:05:05,208:INFO:Set up index.
2025-09-14 22:05:05,304:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:05:05,304:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:05:05,304:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:11:41,640:INFO:Initializing predict_model()
2025-09-14 22:11:41,641:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30bb10e10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30cf7cea0>)
2025-09-14 22:11:41,641:INFO:Checking exceptions
2025-09-14 22:11:41,641:INFO:Preloading libraries
2025-09-14 22:11:41,641:INFO:Set up data.
2025-09-14 22:11:41,647:INFO:Set up index.
2025-09-14 22:11:41,877:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:11:41,877:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:11:41,878:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:11:44,488:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:11:46,566:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:11:46,566:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:11:46,566:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:11:46,566:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:11:47,058:INFO:Initializing load_model()
2025-09-14 22:11:47,058:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:11:48,290:INFO:Initializing predict_model()
2025-09-14 22:11:48,290:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15e4c87d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15ffac360>)
2025-09-14 22:11:48,290:INFO:Checking exceptions
2025-09-14 22:11:48,290:INFO:Preloading libraries
2025-09-14 22:11:48,290:INFO:Set up data.
2025-09-14 22:11:48,295:INFO:Set up index.
2025-09-14 22:11:48,390:INFO:Initializing predict_model()
2025-09-14 22:11:48,391:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160424d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15fc871a0>)
2025-09-14 22:11:48,391:INFO:Checking exceptions
2025-09-14 22:11:48,391:INFO:Preloading libraries
2025-09-14 22:11:48,391:INFO:Set up data.
2025-09-14 22:11:48,392:INFO:Set up index.
2025-09-14 22:11:51,430:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:11:51,431:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:11:51,431:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:12:10,263:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:12:12,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:12:12,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:12:12,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:12:12,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:12:12,542:INFO:Initializing load_model()
2025-09-14 22:12:12,542:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:12:13,284:INFO:Initializing predict_model()
2025-09-14 22:12:13,285:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x307bcc9d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307c01940>)
2025-09-14 22:12:13,285:INFO:Checking exceptions
2025-09-14 22:12:13,285:INFO:Preloading libraries
2025-09-14 22:12:13,285:INFO:Set up data.
2025-09-14 22:12:13,290:INFO:Set up index.
2025-09-14 22:12:13,397:INFO:Initializing predict_model()
2025-09-14 22:12:13,397:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x307b8bc10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307b60e00>)
2025-09-14 22:12:13,397:INFO:Checking exceptions
2025-09-14 22:12:13,397:INFO:Preloading libraries
2025-09-14 22:12:13,398:INFO:Set up data.
2025-09-14 22:12:13,399:INFO:Set up index.
2025-09-14 22:12:15,962:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:12:15,963:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:12:15,963:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:13:11,050:INFO:Initializing predict_model()
2025-09-14 22:13:11,050:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30bdc5050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309c7ade0>)
2025-09-14 22:13:11,051:INFO:Checking exceptions
2025-09-14 22:13:11,051:INFO:Preloading libraries
2025-09-14 22:13:11,051:INFO:Set up data.
2025-09-14 22:13:11,053:INFO:Set up index.
2025-09-14 22:13:11,213:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:13:11,213:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:13:11,214:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:100: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:13:12,987:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:13:14,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:13:14,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:13:14,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:13:14,878:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:13:15,246:INFO:Initializing load_model()
2025-09-14 22:13:15,246:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:13:15,952:INFO:Initializing predict_model()
2025-09-14 22:13:15,952:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x151d0cf90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16271c360>)
2025-09-14 22:13:15,952:INFO:Checking exceptions
2025-09-14 22:13:15,952:INFO:Preloading libraries
2025-09-14 22:13:15,952:INFO:Set up data.
2025-09-14 22:13:15,957:INFO:Set up index.
2025-09-14 22:13:16,052:INFO:Initializing predict_model()
2025-09-14 22:13:16,052:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x162a675d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1625871a0>)
2025-09-14 22:13:16,052:INFO:Checking exceptions
2025-09-14 22:13:16,052:INFO:Preloading libraries
2025-09-14 22:13:16,052:INFO:Set up data.
2025-09-14 22:13:16,053:INFO:Set up index.
2025-09-14 22:13:18,739:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:13:18,740:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:13:18,740:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:100: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:14:21,542:INFO:Initializing predict_model()
2025-09-14 22:14:21,548:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30bdd4090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30cf7e700>)
2025-09-14 22:14:21,548:INFO:Checking exceptions
2025-09-14 22:14:21,548:INFO:Preloading libraries
2025-09-14 22:14:21,548:INFO:Set up data.
2025-09-14 22:14:21,552:INFO:Set up index.
2025-09-14 22:14:21,751:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:14:21,751:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:14:21,752:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:100: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:14:21,841:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:136: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values.values, X_transformed, feature_names=[f"feature_{i}" for i in range(X_transformed.shape[1])], show=False)

2025-09-14 22:14:23,636:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:14:25,548:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:14:25,550:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:14:25,550:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:14:25,550:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:14:25,936:INFO:Initializing load_model()
2025-09-14 22:14:25,936:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:14:26,443:INFO:Initializing predict_model()
2025-09-14 22:14:26,443:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1740b35d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1740cd620>)
2025-09-14 22:14:26,444:INFO:Checking exceptions
2025-09-14 22:14:26,444:INFO:Preloading libraries
2025-09-14 22:14:26,444:INFO:Set up data.
2025-09-14 22:14:26,448:INFO:Set up index.
2025-09-14 22:14:26,544:INFO:Initializing predict_model()
2025-09-14 22:14:26,544:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f2f9690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1702431a0>)
2025-09-14 22:14:26,544:INFO:Checking exceptions
2025-09-14 22:14:26,544:INFO:Preloading libraries
2025-09-14 22:14:26,544:INFO:Set up data.
2025-09-14 22:14:26,546:INFO:Set up index.
2025-09-14 22:14:29,012:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:14:29,012:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:14:29,012:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:100: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:14:39,831:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:14:41,688:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:14:41,688:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:14:41,689:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:14:41,689:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:14:42,110:INFO:Initializing load_model()
2025-09-14 22:14:42,110:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:14:42,811:INFO:Initializing predict_model()
2025-09-14 22:14:42,811:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309831ed0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30c9b7f60>)
2025-09-14 22:14:42,811:INFO:Checking exceptions
2025-09-14 22:14:42,811:INFO:Preloading libraries
2025-09-14 22:14:42,811:INFO:Set up data.
2025-09-14 22:14:42,815:INFO:Set up index.
2025-09-14 22:14:42,921:INFO:Initializing predict_model()
2025-09-14 22:14:42,921:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30971ff10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30c9b8a40>)
2025-09-14 22:14:42,921:INFO:Checking exceptions
2025-09-14 22:14:42,921:INFO:Preloading libraries
2025-09-14 22:14:42,922:INFO:Set up data.
2025-09-14 22:14:42,923:INFO:Set up index.
2025-09-14 22:14:45,341:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:14:45,341:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:14:45,341:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:100: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:16:43,676:INFO:Initializing predict_model()
2025-09-14 22:16:43,677:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30bbf3ad0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x313378b80>)
2025-09-14 22:16:43,677:INFO:Checking exceptions
2025-09-14 22:16:43,677:INFO:Preloading libraries
2025-09-14 22:16:43,677:INFO:Set up data.
2025-09-14 22:16:43,680:INFO:Set up index.
2025-09-14 22:16:43,930:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:16:43,935:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:16:43,935:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:100: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:16:46,260:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:16:48,195:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:16:48,195:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:16:48,195:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:16:48,195:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:16:48,577:INFO:Initializing load_model()
2025-09-14 22:16:48,577:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:16:49,486:INFO:Initializing predict_model()
2025-09-14 22:16:49,486:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15e0db2d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15e0b0360>)
2025-09-14 22:16:49,486:INFO:Checking exceptions
2025-09-14 22:16:49,486:INFO:Preloading libraries
2025-09-14 22:16:49,486:INFO:Set up data.
2025-09-14 22:16:49,490:INFO:Set up index.
2025-09-14 22:16:49,586:INFO:Initializing predict_model()
2025-09-14 22:16:49,586:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15bdc9290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15de171a0>)
2025-09-14 22:16:49,586:INFO:Checking exceptions
2025-09-14 22:16:49,586:INFO:Preloading libraries
2025-09-14 22:16:49,586:INFO:Set up data.
2025-09-14 22:16:49,588:INFO:Set up index.
2025-09-14 22:16:52,185:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:16:52,185:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:16:52,186:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:100: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:18:13,034:INFO:Initializing predict_model()
2025-09-14 22:18:13,037:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16f9916d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3134bc2c0>)
2025-09-14 22:18:13,037:INFO:Checking exceptions
2025-09-14 22:18:13,037:INFO:Preloading libraries
2025-09-14 22:18:13,037:INFO:Set up data.
2025-09-14 22:18:13,039:INFO:Set up index.
2025-09-14 22:18:13,223:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:18:13,224:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:18:13,224:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:100: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:18:15,122:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:18:17,010:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:18:17,010:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:18:17,010:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:18:17,010:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:18:17,390:INFO:Initializing load_model()
2025-09-14 22:18:17,390:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:18:17,929:INFO:Initializing predict_model()
2025-09-14 22:18:17,929:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x167301dd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x167fb0360>)
2025-09-14 22:18:17,929:INFO:Checking exceptions
2025-09-14 22:18:17,929:INFO:Preloading libraries
2025-09-14 22:18:17,929:INFO:Set up data.
2025-09-14 22:18:17,934:INFO:Set up index.
2025-09-14 22:18:18,028:INFO:Initializing predict_model()
2025-09-14 22:18:18,028:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1682fa550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x167e171a0>)
2025-09-14 22:18:18,028:INFO:Checking exceptions
2025-09-14 22:18:18,028:INFO:Preloading libraries
2025-09-14 22:18:18,028:INFO:Set up data.
2025-09-14 22:18:18,029:INFO:Set up index.
2025-09-14 22:18:20,684:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:18:20,684:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:18:20,684:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:100: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:22:13,257:INFO:Initializing predict_model()
2025-09-14 22:22:13,263:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309b29350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30c381440>)
2025-09-14 22:22:13,263:INFO:Checking exceptions
2025-09-14 22:22:13,263:INFO:Preloading libraries
2025-09-14 22:22:13,263:INFO:Set up data.
2025-09-14 22:22:13,266:INFO:Set up index.
2025-09-14 22:22:15,343:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:22:17,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:22:17,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:22:17,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:22:17,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:22:17,649:INFO:Initializing load_model()
2025-09-14 22:22:17,649:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:22:18,415:INFO:Initializing predict_model()
2025-09-14 22:22:18,415:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x171879f50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1718b0360>)
2025-09-14 22:22:18,415:INFO:Checking exceptions
2025-09-14 22:22:18,415:INFO:Preloading libraries
2025-09-14 22:22:18,415:INFO:Set up data.
2025-09-14 22:22:18,420:INFO:Set up index.
2025-09-14 22:22:18,515:INFO:Initializing predict_model()
2025-09-14 22:22:18,515:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x171698f10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17171b1a0>)
2025-09-14 22:22:18,516:INFO:Checking exceptions
2025-09-14 22:22:18,516:INFO:Preloading libraries
2025-09-14 22:22:18,516:INFO:Set up data.
2025-09-14 22:22:18,517:INFO:Set up index.
2025-09-14 22:22:32,138:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:22:34,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:22:34,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:22:34,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:22:34,249:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:22:34,717:INFO:Initializing load_model()
2025-09-14 22:22:34,717:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:22:35,191:INFO:Initializing predict_model()
2025-09-14 22:22:35,192:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x300a463d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x305812020>)
2025-09-14 22:22:35,192:INFO:Checking exceptions
2025-09-14 22:22:35,192:INFO:Preloading libraries
2025-09-14 22:22:35,192:INFO:Set up data.
2025-09-14 22:22:35,196:INFO:Set up index.
2025-09-14 22:22:35,302:INFO:Initializing predict_model()
2025-09-14 22:22:35,302:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3013e29d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x302523920>)
2025-09-14 22:22:35,302:INFO:Checking exceptions
2025-09-14 22:22:35,302:INFO:Preloading libraries
2025-09-14 22:22:35,302:INFO:Set up data.
2025-09-14 22:22:35,304:INFO:Set up index.
2025-09-14 22:25:12,218:INFO:Initializing predict_model()
2025-09-14 22:25:12,219:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30ce27390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30cf74720>)
2025-09-14 22:25:12,219:INFO:Checking exceptions
2025-09-14 22:25:12,219:INFO:Preloading libraries
2025-09-14 22:25:12,219:INFO:Set up data.
2025-09-14 22:25:12,235:INFO:Set up index.
2025-09-14 22:25:14,945:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:25:16,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:25:16,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:25:16,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:25:16,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:25:17,446:INFO:Initializing load_model()
2025-09-14 22:25:17,446:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:25:18,188:INFO:Initializing predict_model()
2025-09-14 22:25:18,188:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14ab157d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x149ea02c0>)
2025-09-14 22:25:18,189:INFO:Checking exceptions
2025-09-14 22:25:18,189:INFO:Preloading libraries
2025-09-14 22:25:18,189:INFO:Set up data.
2025-09-14 22:25:18,192:INFO:Set up index.
2025-09-14 22:25:18,278:INFO:Initializing predict_model()
2025-09-14 22:25:18,278:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x148913910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x149d0b1a0>)
2025-09-14 22:25:18,278:INFO:Checking exceptions
2025-09-14 22:25:18,278:INFO:Preloading libraries
2025-09-14 22:25:18,278:INFO:Set up data.
2025-09-14 22:25:18,279:INFO:Set up index.
2025-09-14 22:26:06,767:INFO:Initializing predict_model()
2025-09-14 22:26:06,769:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30cd40d90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30c3ca0c0>)
2025-09-14 22:26:06,769:INFO:Checking exceptions
2025-09-14 22:26:06,769:INFO:Preloading libraries
2025-09-14 22:26:06,769:INFO:Set up data.
2025-09-14 22:26:06,772:INFO:Set up index.
2025-09-14 22:26:08,821:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:26:10,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:26:10,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:26:10,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:26:10,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:26:11,060:INFO:Initializing load_model()
2025-09-14 22:26:11,060:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:26:11,592:INFO:Initializing predict_model()
2025-09-14 22:26:11,592:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15d7bcdd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15db29300>)
2025-09-14 22:26:11,592:INFO:Checking exceptions
2025-09-14 22:26:11,593:INFO:Preloading libraries
2025-09-14 22:26:11,593:INFO:Set up data.
2025-09-14 22:26:11,597:INFO:Set up index.
2025-09-14 22:26:11,692:INFO:Initializing predict_model()
2025-09-14 22:26:11,692:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15c3e8ad0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15d4b31a0>)
2025-09-14 22:26:11,692:INFO:Checking exceptions
2025-09-14 22:26:11,692:INFO:Preloading libraries
2025-09-14 22:26:11,692:INFO:Set up data.
2025-09-14 22:26:11,693:INFO:Set up index.
2025-09-14 22:26:24,439:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:26:26,308:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:26:26,308:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:26:26,308:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:26:26,308:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:26:26,735:INFO:Initializing load_model()
2025-09-14 22:26:26,735:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:26:27,508:INFO:Initializing predict_model()
2025-09-14 22:26:27,508:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30106c550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x305320680>)
2025-09-14 22:26:27,508:INFO:Checking exceptions
2025-09-14 22:26:27,508:INFO:Preloading libraries
2025-09-14 22:26:27,509:INFO:Set up data.
2025-09-14 22:26:27,513:INFO:Set up index.
2025-09-14 22:26:27,609:INFO:Initializing predict_model()
2025-09-14 22:26:27,609:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x300cb86d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x301d6fba0>)
2025-09-14 22:26:27,609:INFO:Checking exceptions
2025-09-14 22:26:27,609:INFO:Preloading libraries
2025-09-14 22:26:27,609:INFO:Set up data.
2025-09-14 22:26:27,610:INFO:Set up index.
2025-09-14 22:28:39,709:INFO:Initializing predict_model()
2025-09-14 22:28:39,709:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30cd9c150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bba3b00>)
2025-09-14 22:28:39,710:INFO:Checking exceptions
2025-09-14 22:28:39,710:INFO:Preloading libraries
2025-09-14 22:28:39,712:INFO:Set up data.
2025-09-14 22:28:39,724:INFO:Set up index.
2025-09-14 22:28:39,944:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:28:39,949:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:28:39,949:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:28:42,234:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:28:44,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:28:44,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:28:44,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:28:44,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:28:44,520:INFO:Initializing load_model()
2025-09-14 22:28:44,520:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:28:45,269:INFO:Initializing predict_model()
2025-09-14 22:28:45,269:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16907d910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1690ac360>)
2025-09-14 22:28:45,269:INFO:Checking exceptions
2025-09-14 22:28:45,269:INFO:Preloading libraries
2025-09-14 22:28:45,270:INFO:Set up data.
2025-09-14 22:28:45,274:INFO:Set up index.
2025-09-14 22:28:45,367:INFO:Initializing predict_model()
2025-09-14 22:28:45,367:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x167df52d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x168e171a0>)
2025-09-14 22:28:45,367:INFO:Checking exceptions
2025-09-14 22:28:45,367:INFO:Preloading libraries
2025-09-14 22:28:45,367:INFO:Set up data.
2025-09-14 22:28:45,368:INFO:Set up index.
2025-09-14 22:28:47,880:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:28:47,880:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:28:47,880:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:28:58,569:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:29:00,440:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:29:00,440:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:29:00,440:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:29:00,440:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:29:00,868:INFO:Initializing load_model()
2025-09-14 22:29:00,868:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:29:01,636:INFO:Initializing predict_model()
2025-09-14 22:29:01,636:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3033e1fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3034014e0>)
2025-09-14 22:29:01,636:INFO:Checking exceptions
2025-09-14 22:29:01,636:INFO:Preloading libraries
2025-09-14 22:29:01,637:INFO:Set up data.
2025-09-14 22:29:01,641:INFO:Set up index.
2025-09-14 22:29:01,738:INFO:Initializing predict_model()
2025-09-14 22:29:01,738:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x302391510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x303402340>)
2025-09-14 22:29:01,738:INFO:Checking exceptions
2025-09-14 22:29:01,738:INFO:Preloading libraries
2025-09-14 22:29:01,738:INFO:Set up data.
2025-09-14 22:29:01,740:INFO:Set up index.
2025-09-14 22:29:04,170:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:29:04,170:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:29:04,171:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:29:11,247:INFO:Initializing predict_model()
2025-09-14 22:29:11,248:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x306da6510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x305aa93a0>)
2025-09-14 22:29:11,248:INFO:Checking exceptions
2025-09-14 22:29:11,248:INFO:Preloading libraries
2025-09-14 22:29:11,248:INFO:Set up data.
2025-09-14 22:29:11,251:INFO:Set up index.
2025-09-14 22:29:11,371:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:29:11,371:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:29:11,371:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:29:11,497:INFO:Initializing predict_model()
2025-09-14 22:29:11,497:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3071c9850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30707e660>)
2025-09-14 22:29:11,497:INFO:Checking exceptions
2025-09-14 22:29:11,497:INFO:Preloading libraries
2025-09-14 22:29:11,498:INFO:Set up data.
2025-09-14 22:29:11,504:INFO:Set up index.
2025-09-14 22:29:11,600:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:29:11,601:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:29:11,601:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:29:12,387:INFO:Initializing predict_model()
2025-09-14 22:29:12,388:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1109066d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x305aabd80>)
2025-09-14 22:29:12,388:INFO:Checking exceptions
2025-09-14 22:29:12,388:INFO:Preloading libraries
2025-09-14 22:29:12,389:INFO:Set up data.
2025-09-14 22:29:12,391:INFO:Set up index.
2025-09-14 22:29:12,483:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:97: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:29:12,483:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:98: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:29:12,483:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v3/app.py:99: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:30:56,317:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:30:58,344:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:30:58,344:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:30:58,344:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:30:58,344:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:30:58,857:INFO:Initializing load_model()
2025-09-14 22:30:58,857:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:30:59,428:INFO:Initializing predict_model()
2025-09-14 22:30:59,428:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16b279190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16b944180>)
2025-09-14 22:30:59,429:INFO:Checking exceptions
2025-09-14 22:30:59,429:INFO:Preloading libraries
2025-09-14 22:30:59,429:INFO:Set up data.
2025-09-14 22:30:59,435:INFO:Set up index.
2025-09-14 22:30:59,523:INFO:Initializing predict_model()
2025-09-14 22:30:59,523:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x168ac88d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16b822e80>)
2025-09-14 22:30:59,523:INFO:Checking exceptions
2025-09-14 22:30:59,523:INFO:Preloading libraries
2025-09-14 22:30:59,523:INFO:Set up data.
2025-09-14 22:30:59,525:INFO:Set up index.
2025-09-14 22:30:59,582:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v4/app.py:68: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:30:59,583:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v4/app.py:69: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:30:59,583:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v4/app.py:70: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:31:25,171:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:31:27,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:31:27,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:31:27,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:31:27,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:31:27,840:INFO:Initializing load_model()
2025-09-14 22:31:27,840:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:31:50,671:INFO:Initializing predict_model()
2025-09-14 22:31:50,672:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1683417d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x167fd8220>)
2025-09-14 22:31:50,672:INFO:Checking exceptions
2025-09-14 22:31:50,672:INFO:Preloading libraries
2025-09-14 22:31:50,672:INFO:Set up data.
2025-09-14 22:31:50,681:INFO:Set up index.
2025-09-14 22:31:50,772:INFO:Initializing predict_model()
2025-09-14 22:31:50,772:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x167e51510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1667a4d60>)
2025-09-14 22:31:50,772:INFO:Checking exceptions
2025-09-14 22:31:50,772:INFO:Preloading libraries
2025-09-14 22:31:50,772:INFO:Set up data.
2025-09-14 22:31:50,773:INFO:Set up index.
2025-09-14 22:31:50,833:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v4/app.py:68: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:31:50,833:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v4/app.py:69: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:31:50,834:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v4/app.py:70: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:31:59,162:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:32:01,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:32:01,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:32:01,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:32:01,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:32:01,879:INFO:Initializing load_model()
2025-09-14 22:32:01,879:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:32:02,604:INFO:Initializing predict_model()
2025-09-14 22:32:02,604:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x307c26bd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30af9f740>)
2025-09-14 22:32:02,604:INFO:Checking exceptions
2025-09-14 22:32:02,604:INFO:Preloading libraries
2025-09-14 22:32:02,604:INFO:Set up data.
2025-09-14 22:32:02,610:INFO:Set up index.
2025-09-14 22:32:02,720:INFO:Initializing predict_model()
2025-09-14 22:32:02,720:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x307cb6210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30aef05e0>)
2025-09-14 22:32:02,720:INFO:Checking exceptions
2025-09-14 22:32:02,720:INFO:Preloading libraries
2025-09-14 22:32:02,720:INFO:Set up data.
2025-09-14 22:32:02,721:INFO:Set up index.
2025-09-14 22:32:02,789:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v4/app.py:68: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:32:02,789:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v4/app.py:69: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:32:02,790:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v4/app.py:70: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:33:33,566:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:33:35,652:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:33:35,652:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:33:35,652:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:33:35,652:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:33:36,158:INFO:Initializing load_model()
2025-09-14 22:33:36,158:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:33:36,688:INFO:Initializing predict_model()
2025-09-14 22:33:36,688:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15dacd7d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15de70cc0>)
2025-09-14 22:33:36,688:INFO:Checking exceptions
2025-09-14 22:33:36,688:INFO:Preloading libraries
2025-09-14 22:33:36,688:INFO:Set up data.
2025-09-14 22:33:36,696:INFO:Set up index.
2025-09-14 22:33:36,791:INFO:Initializing predict_model()
2025-09-14 22:33:36,791:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15c12ead0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15b9a8d60>)
2025-09-14 22:33:36,791:INFO:Checking exceptions
2025-09-14 22:33:36,791:INFO:Preloading libraries
2025-09-14 22:33:36,791:INFO:Set up data.
2025-09-14 22:33:36,792:INFO:Set up index.
2025-09-14 22:33:36,850:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v4/app.py:68: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:33:36,850:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v4/app.py:69: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:33:36,850:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v4/app.py:70: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:33:48,302:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:33:50,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:33:50,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:33:50,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:33:50,330:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:33:50,872:INFO:Initializing load_model()
2025-09-14 22:33:50,872:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:33:51,951:INFO:Initializing predict_model()
2025-09-14 22:33:51,951:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x306450e50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30317d760>)
2025-09-14 22:33:51,952:INFO:Checking exceptions
2025-09-14 22:33:51,952:INFO:Preloading libraries
2025-09-14 22:33:51,952:INFO:Set up data.
2025-09-14 22:33:51,958:INFO:Set up index.
2025-09-14 22:33:52,052:INFO:Initializing predict_model()
2025-09-14 22:33:52,052:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3017cf8d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3064f3c40>)
2025-09-14 22:33:52,052:INFO:Checking exceptions
2025-09-14 22:33:52,052:INFO:Preloading libraries
2025-09-14 22:33:52,053:INFO:Set up data.
2025-09-14 22:33:52,054:INFO:Set up index.
2025-09-14 22:33:52,114:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v4/app.py:68: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-14 22:33:52,114:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v4/app.py:69: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-14 22:33:52,115:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v4/app.py:70: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-14 22:36:33,709:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:36:35,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:36:35,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:36:35,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:36:35,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:36:36,043:INFO:Initializing load_model()
2025-09-14 22:36:36,043:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:36:36,739:INFO:Initializing predict_model()
2025-09-14 22:36:36,739:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15f474d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15db14d60>)
2025-09-14 22:36:36,739:INFO:Checking exceptions
2025-09-14 22:36:36,740:INFO:Preloading libraries
2025-09-14 22:36:36,740:INFO:Set up data.
2025-09-14 22:36:36,744:INFO:Set up index.
2025-09-14 22:36:36,835:INFO:Initializing predict_model()
2025-09-14 22:36:36,835:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15e9fbc10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15f7c1ee0>)
2025-09-14 22:36:36,835:INFO:Checking exceptions
2025-09-14 22:36:36,835:INFO:Preloading libraries
2025-09-14 22:36:36,835:INFO:Set up data.
2025-09-14 22:36:36,836:INFO:Set up index.
2025-09-14 22:38:30,945:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:38:33,085:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:38:33,085:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:38:33,085:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:38:33,085:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:38:33,615:INFO:Initializing load_model()
2025-09-14 22:38:33,615:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:38:34,478:INFO:Initializing predict_model()
2025-09-14 22:38:34,478:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15fcd91d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x15e4a4d60>)
2025-09-14 22:38:34,478:INFO:Checking exceptions
2025-09-14 22:38:34,479:INFO:Preloading libraries
2025-09-14 22:38:34,479:INFO:Set up data.
2025-09-14 22:38:34,487:INFO:Set up index.
2025-09-14 22:38:34,583:INFO:Initializing predict_model()
2025-09-14 22:38:34,583:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15fc3a0d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1036d1da0>)
2025-09-14 22:38:34,583:INFO:Checking exceptions
2025-09-14 22:38:34,583:INFO:Preloading libraries
2025-09-14 22:38:34,583:INFO:Set up data.
2025-09-14 22:38:34,584:INFO:Set up index.
2025-09-14 22:39:47,595:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:39:49,642:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:39:49,642:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:39:49,642:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:39:49,642:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:39:50,135:INFO:Initializing load_model()
2025-09-14 22:39:50,135:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:39:51,135:INFO:Initializing predict_model()
2025-09-14 22:39:51,136:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17215bc90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x177017420>)
2025-09-14 22:39:51,136:INFO:Checking exceptions
2025-09-14 22:39:51,136:INFO:Preloading libraries
2025-09-14 22:39:51,136:INFO:Set up data.
2025-09-14 22:39:51,143:INFO:Set up index.
2025-09-14 22:39:51,246:INFO:Initializing predict_model()
2025-09-14 22:39:51,246:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x172313f10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x104905da0>)
2025-09-14 22:39:51,246:INFO:Checking exceptions
2025-09-14 22:39:51,246:INFO:Preloading libraries
2025-09-14 22:39:51,246:INFO:Set up data.
2025-09-14 22:39:51,248:INFO:Set up index.
2025-09-14 22:40:05,238:WARNING:/opt/miniconda3/envs/odzeraai/lib/python3.11/site-packages/requests/__init__.py:86: RequestsDependencyWarning: Unable to find acceptable character detection dependency (chardet or charset_normalizer).
  warnings.warn(

2025-09-14 22:40:07,278:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:40:07,278:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:40:07,278:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:40:07,278:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-14 22:40:07,824:INFO:Initializing load_model()
2025-09-14 22:40:07,824:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-14 22:40:08,380:INFO:Initializing predict_model()
2025-09-14 22:40:08,381:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17bb7b3d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17bbbd440>)
2025-09-14 22:40:08,381:INFO:Checking exceptions
2025-09-14 22:40:08,381:INFO:Preloading libraries
2025-09-14 22:40:08,381:INFO:Set up data.
2025-09-14 22:40:08,388:INFO:Set up index.
2025-09-14 22:40:08,488:INFO:Initializing predict_model()
2025-09-14 22:40:08,488:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x107abce90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17f034400>)
2025-09-14 22:40:08,488:INFO:Checking exceptions
2025-09-14 22:40:08,488:INFO:Preloading libraries
2025-09-14 22:40:08,488:INFO:Set up data.
2025-09-14 22:40:08,489:INFO:Set up index.
2025-09-22 20:51:05,232:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 20:51:05,238:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 20:51:05,238:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 20:51:05,238:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 20:51:09,066:INFO:Initializing load_model()
2025-09-22 20:51:09,066:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-22 20:51:09,310:WARNING:/opt/miniconda3/envs/insurance_app/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.1.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.1.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.23', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.5.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.14.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.9', 'machine': 'arm64'}}
  warnings.warn(

2025-09-22 20:51:10,123:INFO:Initializing predict_model()
2025-09-22 20:51:10,123:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x303e7f5e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x303de5e50>)
2025-09-22 20:51:10,123:INFO:Checking exceptions
2025-09-22 20:51:10,123:INFO:Preloading libraries
2025-09-22 20:51:10,123:INFO:Set up data.
2025-09-22 20:51:10,128:INFO:Set up index.
2025-09-22 20:51:10,380:INFO:Initializing predict_model()
2025-09-22 20:51:10,380:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x303e04370>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x303de5e50>)
2025-09-22 20:51:10,380:INFO:Checking exceptions
2025-09-22 20:51:10,380:INFO:Preloading libraries
2025-09-22 20:51:10,380:INFO:Set up data.
2025-09-22 20:51:10,381:INFO:Set up index.
2025-09-22 20:51:11,529:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v5/app.py:475: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-22 20:51:11,529:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v5/app.py:476: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-22 20:51:11,529:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v5/app.py:477: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-22 20:51:19,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 20:51:19,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 20:51:19,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 20:51:19,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 20:51:20,423:INFO:Initializing load_model()
2025-09-22 20:51:20,423:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-22 20:51:20,462:WARNING:/opt/miniconda3/envs/insurance_app/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.1.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.1.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.23', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.5.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.14.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.9', 'machine': 'arm64'}}
  warnings.warn(

2025-09-22 20:51:20,839:INFO:Initializing predict_model()
2025-09-22 20:51:20,839:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30792f0a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307917430>)
2025-09-22 20:51:20,839:INFO:Checking exceptions
2025-09-22 20:51:20,839:INFO:Preloading libraries
2025-09-22 20:51:20,840:INFO:Set up data.
2025-09-22 20:51:20,846:INFO:Set up index.
2025-09-22 20:51:20,983:INFO:Initializing predict_model()
2025-09-22 20:51:20,983:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x307b31190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307917040>)
2025-09-22 20:51:20,983:INFO:Checking exceptions
2025-09-22 20:51:20,983:INFO:Preloading libraries
2025-09-22 20:51:20,983:INFO:Set up data.
2025-09-22 20:51:20,985:INFO:Set up index.
2025-09-22 20:51:22,317:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v5/app.py:475: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-22 20:51:22,317:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v5/app.py:476: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-22 20:51:22,317:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v5/app.py:477: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-22 20:55:21,710:INFO:Initializing predict_model()
2025-09-22 20:55:21,710:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309bd8b80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3079858b0>)
2025-09-22 20:55:21,710:INFO:Checking exceptions
2025-09-22 20:55:21,710:INFO:Preloading libraries
2025-09-22 20:55:21,711:INFO:Set up data.
2025-09-22 20:55:21,716:INFO:Set up index.
2025-09-22 20:55:21,881:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v5/app.py:475: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["children"] = person_df_model["children"].astype(int)

2025-09-22 20:55:21,882:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v5/app.py:476: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["bmi"] = person_df_model["bmi"].astype(float)

2025-09-22 20:55:21,882:WARNING:/Users/kasienka/Desktop/odzeradoai/Moduł 8/insurance_prediction_v5/app.py:477: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  person_df_model["age"] = person_df_model["age"].astype(int)

2025-09-22 20:59:53,159:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 20:59:53,174:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 20:59:53,174:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 20:59:53,174:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 20:59:53,805:INFO:Initializing load_model()
2025-09-22 20:59:53,805:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-22 20:59:53,833:WARNING:/opt/miniconda3/envs/insurance_app/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.1.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.1.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.23', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.5.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.14.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.9', 'machine': 'arm64'}}
  warnings.warn(

2025-09-22 20:59:54,700:INFO:Initializing predict_model()
2025-09-22 20:59:54,701:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16520b520>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1650521f0>)
2025-09-22 20:59:54,701:INFO:Checking exceptions
2025-09-22 20:59:54,701:INFO:Preloading libraries
2025-09-22 20:59:54,701:INFO:Set up data.
2025-09-22 20:59:54,710:INFO:Set up index.
2025-09-22 20:59:54,799:INFO:Initializing predict_model()
2025-09-22 20:59:54,799:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16503eee0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1650521f0>)
2025-09-22 20:59:54,799:INFO:Checking exceptions
2025-09-22 20:59:54,799:INFO:Preloading libraries
2025-09-22 20:59:54,799:INFO:Set up data.
2025-09-22 20:59:54,800:INFO:Set up index.
2025-09-22 21:00:07,122:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:00:07,122:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:00:07,122:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:00:07,122:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:00:07,694:INFO:Initializing load_model()
2025-09-22 21:00:07,695:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-22 21:00:07,725:WARNING:/opt/miniconda3/envs/insurance_app/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.1.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.1.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.23', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.5.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.14.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.9', 'machine': 'arm64'}}
  warnings.warn(

2025-09-22 21:00:08,114:INFO:Initializing predict_model()
2025-09-22 21:00:08,114:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3019ac160>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3019d74c0>)
2025-09-22 21:00:08,114:INFO:Checking exceptions
2025-09-22 21:00:08,114:INFO:Preloading libraries
2025-09-22 21:00:08,114:INFO:Set up data.
2025-09-22 21:00:08,120:INFO:Set up index.
2025-09-22 21:00:08,218:INFO:Initializing predict_model()
2025-09-22 21:00:08,218:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3019dcb80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30187e550>)
2025-09-22 21:00:08,219:INFO:Checking exceptions
2025-09-22 21:00:08,219:INFO:Preloading libraries
2025-09-22 21:00:08,219:INFO:Set up data.
2025-09-22 21:00:08,220:INFO:Set up index.
2025-09-22 21:01:03,858:INFO:Initializing predict_model()
2025-09-22 21:01:03,858:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30409ad60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3039dbaf0>)
2025-09-22 21:01:03,858:INFO:Checking exceptions
2025-09-22 21:01:03,858:INFO:Preloading libraries
2025-09-22 21:01:03,859:INFO:Set up data.
2025-09-22 21:01:03,874:INFO:Set up index.
2025-09-22 21:01:04,159:INFO:Initializing predict_model()
2025-09-22 21:01:04,159:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30406abb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3039db670>)
2025-09-22 21:01:04,159:INFO:Checking exceptions
2025-09-22 21:01:04,159:INFO:Preloading libraries
2025-09-22 21:01:04,160:INFO:Set up data.
2025-09-22 21:01:04,161:INFO:Set up index.
2025-09-22 21:01:04,361:INFO:Initializing predict_model()
2025-09-22 21:01:04,361:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x304067880>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3039db670>)
2025-09-22 21:01:04,361:INFO:Checking exceptions
2025-09-22 21:01:04,361:INFO:Preloading libraries
2025-09-22 21:01:04,361:INFO:Set up data.
2025-09-22 21:01:04,363:INFO:Set up index.
2025-09-22 21:01:04,564:INFO:Initializing predict_model()
2025-09-22 21:01:04,564:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3026041f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1670>)
2025-09-22 21:01:04,564:INFO:Checking exceptions
2025-09-22 21:01:04,564:INFO:Preloading libraries
2025-09-22 21:01:04,564:INFO:Set up data.
2025-09-22 21:01:04,566:INFO:Set up index.
2025-09-22 21:01:04,794:INFO:Initializing predict_model()
2025-09-22 21:01:04,794:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3040ab940>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1dc0>)
2025-09-22 21:01:04,794:INFO:Checking exceptions
2025-09-22 21:01:04,794:INFO:Preloading libraries
2025-09-22 21:01:04,794:INFO:Set up data.
2025-09-22 21:01:04,796:INFO:Set up index.
2025-09-22 21:01:05,078:INFO:Initializing predict_model()
2025-09-22 21:01:05,078:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x304036e50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3039dbc10>)
2025-09-22 21:01:05,078:INFO:Checking exceptions
2025-09-22 21:01:05,078:INFO:Preloading libraries
2025-09-22 21:01:05,078:INFO:Set up data.
2025-09-22 21:01:05,080:INFO:Set up index.
2025-09-22 21:01:05,633:INFO:Initializing predict_model()
2025-09-22 21:01:05,633:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x304061ac0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1ee0>)
2025-09-22 21:01:05,633:INFO:Checking exceptions
2025-09-22 21:01:05,633:INFO:Preloading libraries
2025-09-22 21:01:05,633:INFO:Set up data.
2025-09-22 21:01:05,636:INFO:Set up index.
2025-09-22 21:01:05,949:INFO:Initializing predict_model()
2025-09-22 21:01:05,949:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x301ae67c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1d30>)
2025-09-22 21:01:05,949:INFO:Checking exceptions
2025-09-22 21:01:05,949:INFO:Preloading libraries
2025-09-22 21:01:05,950:INFO:Set up data.
2025-09-22 21:01:05,951:INFO:Set up index.
2025-09-22 21:01:06,181:INFO:Initializing predict_model()
2025-09-22 21:01:06,181:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x301888850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30404ac10>)
2025-09-22 21:01:06,181:INFO:Checking exceptions
2025-09-22 21:01:06,181:INFO:Preloading libraries
2025-09-22 21:01:06,182:INFO:Set up data.
2025-09-22 21:01:06,183:INFO:Set up index.
2025-09-22 21:01:06,439:INFO:Initializing predict_model()
2025-09-22 21:01:06,439:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3040f5a90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1430>)
2025-09-22 21:01:06,439:INFO:Checking exceptions
2025-09-22 21:01:06,439:INFO:Preloading libraries
2025-09-22 21:01:06,439:INFO:Set up data.
2025-09-22 21:01:06,441:INFO:Set up index.
2025-09-22 21:01:06,692:INFO:Initializing predict_model()
2025-09-22 21:01:06,692:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30405f4c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1430>)
2025-09-22 21:01:06,693:INFO:Checking exceptions
2025-09-22 21:01:06,693:INFO:Preloading libraries
2025-09-22 21:01:06,693:INFO:Set up data.
2025-09-22 21:01:06,695:INFO:Set up index.
2025-09-22 21:01:06,974:INFO:Initializing predict_model()
2025-09-22 21:01:06,974:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3040b5550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b10d0>)
2025-09-22 21:01:06,974:INFO:Checking exceptions
2025-09-22 21:01:06,974:INFO:Preloading libraries
2025-09-22 21:01:06,975:INFO:Set up data.
2025-09-22 21:01:06,976:INFO:Set up index.
2025-09-22 21:01:07,237:INFO:Initializing predict_model()
2025-09-22 21:01:07,238:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3041c16d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1d30>)
2025-09-22 21:01:07,238:INFO:Checking exceptions
2025-09-22 21:01:07,238:INFO:Preloading libraries
2025-09-22 21:01:07,238:INFO:Set up data.
2025-09-22 21:01:07,241:INFO:Set up index.
2025-09-22 21:01:07,475:INFO:Initializing predict_model()
2025-09-22 21:01:07,475:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x301483340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30404ae50>)
2025-09-22 21:01:07,475:INFO:Checking exceptions
2025-09-22 21:01:07,475:INFO:Preloading libraries
2025-09-22 21:01:07,475:INFO:Set up data.
2025-09-22 21:01:07,477:INFO:Set up index.
2025-09-22 21:01:07,727:INFO:Initializing predict_model()
2025-09-22 21:01:07,727:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3040b5310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b15e0>)
2025-09-22 21:01:07,727:INFO:Checking exceptions
2025-09-22 21:01:07,727:INFO:Preloading libraries
2025-09-22 21:01:07,728:INFO:Set up data.
2025-09-22 21:01:07,729:INFO:Set up index.
2025-09-22 21:01:08,007:INFO:Initializing predict_model()
2025-09-22 21:01:08,007:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3019003d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1e50>)
2025-09-22 21:01:08,007:INFO:Checking exceptions
2025-09-22 21:01:08,007:INFO:Preloading libraries
2025-09-22 21:01:08,007:INFO:Set up data.
2025-09-22 21:01:08,009:INFO:Set up index.
2025-09-22 21:01:10,857:INFO:Initializing predict_model()
2025-09-22 21:01:10,857:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x304067d00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3039dbca0>)
2025-09-22 21:01:10,858:INFO:Checking exceptions
2025-09-22 21:01:10,858:INFO:Preloading libraries
2025-09-22 21:01:10,858:INFO:Set up data.
2025-09-22 21:01:10,860:INFO:Set up index.
2025-09-22 21:01:14,400:INFO:Initializing predict_model()
2025-09-22 21:01:14,400:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x107c44eb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1dc0>)
2025-09-22 21:01:14,401:INFO:Checking exceptions
2025-09-22 21:01:14,401:INFO:Preloading libraries
2025-09-22 21:01:14,401:INFO:Set up data.
2025-09-22 21:01:14,404:INFO:Set up index.
2025-09-22 21:01:14,694:INFO:Initializing predict_model()
2025-09-22 21:01:14,694:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3041c1400>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1ee0>)
2025-09-22 21:01:14,694:INFO:Checking exceptions
2025-09-22 21:01:14,694:INFO:Preloading libraries
2025-09-22 21:01:14,694:INFO:Set up data.
2025-09-22 21:01:14,695:INFO:Set up index.
2025-09-22 21:01:16,919:INFO:Initializing predict_model()
2025-09-22 21:01:16,919:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x304114f70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1820>)
2025-09-22 21:01:16,919:INFO:Checking exceptions
2025-09-22 21:01:16,919:INFO:Preloading libraries
2025-09-22 21:01:16,919:INFO:Set up data.
2025-09-22 21:01:16,922:INFO:Set up index.
2025-09-22 21:01:17,171:INFO:Initializing predict_model()
2025-09-22 21:01:17,171:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3040f5bb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1af0>)
2025-09-22 21:01:17,171:INFO:Checking exceptions
2025-09-22 21:01:17,171:INFO:Preloading libraries
2025-09-22 21:01:17,171:INFO:Set up data.
2025-09-22 21:01:17,173:INFO:Set up index.
2025-09-22 21:01:17,477:INFO:Initializing predict_model()
2025-09-22 21:01:17,477:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30405d3a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3039dbc10>)
2025-09-22 21:01:17,477:INFO:Checking exceptions
2025-09-22 21:01:17,477:INFO:Preloading libraries
2025-09-22 21:01:17,477:INFO:Set up data.
2025-09-22 21:01:17,479:INFO:Set up index.
2025-09-22 21:01:17,739:INFO:Initializing predict_model()
2025-09-22 21:01:17,740:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3040678b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1f70>)
2025-09-22 21:01:17,740:INFO:Checking exceptions
2025-09-22 21:01:17,740:INFO:Preloading libraries
2025-09-22 21:01:17,740:INFO:Set up data.
2025-09-22 21:01:17,741:INFO:Set up index.
2025-09-22 21:01:18,006:INFO:Initializing predict_model()
2025-09-22 21:01:18,006:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x107a86490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1e50>)
2025-09-22 21:01:18,006:INFO:Checking exceptions
2025-09-22 21:01:18,006:INFO:Preloading libraries
2025-09-22 21:01:18,007:INFO:Set up data.
2025-09-22 21:01:18,008:INFO:Set up index.
2025-09-22 21:01:18,273:INFO:Initializing predict_model()
2025-09-22 21:01:18,273:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x304022220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1700>)
2025-09-22 21:01:18,273:INFO:Checking exceptions
2025-09-22 21:01:18,273:INFO:Preloading libraries
2025-09-22 21:01:18,273:INFO:Set up data.
2025-09-22 21:01:18,275:INFO:Set up index.
2025-09-22 21:01:18,525:INFO:Initializing predict_model()
2025-09-22 21:01:18,526:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3040ab2b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1ee0>)
2025-09-22 21:01:18,526:INFO:Checking exceptions
2025-09-22 21:01:18,526:INFO:Preloading libraries
2025-09-22 21:01:18,526:INFO:Set up data.
2025-09-22 21:01:18,527:INFO:Set up index.
2025-09-22 21:01:18,807:INFO:Initializing predict_model()
2025-09-22 21:01:18,807:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x301bc74f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1ca0>)
2025-09-22 21:01:18,807:INFO:Checking exceptions
2025-09-22 21:01:18,807:INFO:Preloading libraries
2025-09-22 21:01:18,807:INFO:Set up data.
2025-09-22 21:01:18,810:INFO:Set up index.
2025-09-22 21:01:19,072:INFO:Initializing predict_model()
2025-09-22 21:01:19,072:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3040221f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3039db160>)
2025-09-22 21:01:19,072:INFO:Checking exceptions
2025-09-22 21:01:19,072:INFO:Preloading libraries
2025-09-22 21:01:19,072:INFO:Set up data.
2025-09-22 21:01:19,074:INFO:Set up index.
2025-09-22 21:01:19,395:INFO:Initializing predict_model()
2025-09-22 21:01:19,395:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3040ab2e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1c10>)
2025-09-22 21:01:19,395:INFO:Checking exceptions
2025-09-22 21:01:19,395:INFO:Preloading libraries
2025-09-22 21:01:19,395:INFO:Set up data.
2025-09-22 21:01:19,397:INFO:Set up index.
2025-09-22 21:03:08,212:INFO:Initializing predict_model()
2025-09-22 21:03:08,213:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30187f700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3039dbd30>)
2025-09-22 21:03:08,213:INFO:Checking exceptions
2025-09-22 21:03:08,213:INFO:Preloading libraries
2025-09-22 21:03:08,213:INFO:Set up data.
2025-09-22 21:03:08,217:INFO:Set up index.
2025-09-22 21:03:08,601:INFO:Initializing predict_model()
2025-09-22 21:03:08,602:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x304074eb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3039dbc10>)
2025-09-22 21:03:08,602:INFO:Checking exceptions
2025-09-22 21:03:08,602:INFO:Preloading libraries
2025-09-22 21:03:08,602:INFO:Set up data.
2025-09-22 21:03:08,604:INFO:Set up index.
2025-09-22 21:03:08,803:INFO:Initializing predict_model()
2025-09-22 21:03:08,808:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x107c7c4f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3039db8b0>)
2025-09-22 21:03:08,809:INFO:Checking exceptions
2025-09-22 21:03:08,809:INFO:Preloading libraries
2025-09-22 21:03:08,809:INFO:Set up data.
2025-09-22 21:03:08,811:INFO:Set up index.
2025-09-22 21:03:08,909:INFO:Initializing predict_model()
2025-09-22 21:03:08,910:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30408bb20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1790>)
2025-09-22 21:03:08,970:INFO:Checking exceptions
2025-09-22 21:03:08,970:INFO:Preloading libraries
2025-09-22 21:03:08,971:INFO:Set up data.
2025-09-22 21:03:08,972:INFO:Set up index.
2025-09-22 21:03:09,395:INFO:Initializing predict_model()
2025-09-22 21:03:09,396:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3040a3fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b14c0>)
2025-09-22 21:03:09,396:INFO:Checking exceptions
2025-09-22 21:03:09,396:INFO:Preloading libraries
2025-09-22 21:03:09,397:INFO:Set up data.
2025-09-22 21:03:09,398:INFO:Set up index.
2025-09-22 21:03:10,547:INFO:Initializing predict_model()
2025-09-22 21:03:10,547:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x301971460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3038680d0>)
2025-09-22 21:03:10,547:INFO:Checking exceptions
2025-09-22 21:03:10,547:INFO:Preloading libraries
2025-09-22 21:03:10,547:INFO:Set up data.
2025-09-22 21:03:10,550:INFO:Set up index.
2025-09-22 21:03:10,895:INFO:Initializing predict_model()
2025-09-22 21:03:10,895:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3041dd7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1e50>)
2025-09-22 21:03:10,896:INFO:Checking exceptions
2025-09-22 21:03:10,896:INFO:Preloading libraries
2025-09-22 21:03:10,896:INFO:Set up data.
2025-09-22 21:03:10,898:INFO:Set up index.
2025-09-22 21:03:11,151:INFO:Initializing predict_model()
2025-09-22 21:03:11,152:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x107c44cd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1e50>)
2025-09-22 21:03:11,152:INFO:Checking exceptions
2025-09-22 21:03:11,152:INFO:Preloading libraries
2025-09-22 21:03:11,152:INFO:Set up data.
2025-09-22 21:03:11,153:INFO:Set up index.
2025-09-22 21:03:11,344:INFO:Initializing predict_model()
2025-09-22 21:03:11,344:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x107c7c3d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3041b1550>)
2025-09-22 21:03:11,344:INFO:Checking exceptions
2025-09-22 21:03:11,344:INFO:Preloading libraries
2025-09-22 21:03:11,344:INFO:Set up data.
2025-09-22 21:03:11,346:INFO:Set up index.
2025-09-22 21:03:11,522:INFO:Initializing predict_model()
2025-09-22 21:03:11,523:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x304063130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3019c20d0>)
2025-09-22 21:03:11,523:INFO:Checking exceptions
2025-09-22 21:03:11,523:INFO:Preloading libraries
2025-09-22 21:03:11,523:INFO:Set up data.
2025-09-22 21:03:11,524:INFO:Set up index.
2025-09-22 21:09:48,494:INFO:Initializing predict_model()
2025-09-22 21:09:48,495:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3041ddd30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x303f78af0>)
2025-09-22 21:09:48,495:INFO:Checking exceptions
2025-09-22 21:09:48,495:INFO:Preloading libraries
2025-09-22 21:09:48,495:INFO:Set up data.
2025-09-22 21:09:48,500:INFO:Set up index.
2025-09-22 21:10:16,934:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:10:16,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:10:16,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:10:16,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:10:17,480:INFO:Initializing load_model()
2025-09-22 21:10:17,480:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-22 21:10:17,507:WARNING:/opt/miniconda3/envs/insurance_app/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.1.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.1.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.23', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.5.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.14.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.9', 'machine': 'arm64'}}
  warnings.warn(

2025-09-22 21:10:18,165:INFO:Initializing predict_model()
2025-09-22 21:10:18,166:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x162ba2070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x162b961f0>)
2025-09-22 21:10:18,166:INFO:Checking exceptions
2025-09-22 21:10:18,166:INFO:Preloading libraries
2025-09-22 21:10:18,166:INFO:Set up data.
2025-09-22 21:10:18,170:INFO:Set up index.
2025-09-22 21:10:18,260:INFO:Initializing predict_model()
2025-09-22 21:10:18,260:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x162b83ee0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x162b961f0>)
2025-09-22 21:10:18,260:INFO:Checking exceptions
2025-09-22 21:10:18,260:INFO:Preloading libraries
2025-09-22 21:10:18,260:INFO:Set up data.
2025-09-22 21:10:18,261:INFO:Set up index.
2025-09-22 21:10:31,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:10:31,413:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:10:31,413:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:10:31,413:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:10:31,975:INFO:Initializing load_model()
2025-09-22 21:10:31,975:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-22 21:10:32,007:WARNING:/opt/miniconda3/envs/insurance_app/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.1.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.1.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.23', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.5.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.14.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.9', 'machine': 'arm64'}}
  warnings.warn(

2025-09-22 21:10:32,411:INFO:Initializing predict_model()
2025-09-22 21:10:32,411:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x307702d00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3076c7280>)
2025-09-22 21:10:32,412:INFO:Checking exceptions
2025-09-22 21:10:32,412:INFO:Preloading libraries
2025-09-22 21:10:32,412:INFO:Set up data.
2025-09-22 21:10:32,416:INFO:Set up index.
2025-09-22 21:10:32,513:INFO:Initializing predict_model()
2025-09-22 21:10:32,513:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3076f10d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3076c73a0>)
2025-09-22 21:10:32,513:INFO:Checking exceptions
2025-09-22 21:10:32,513:INFO:Preloading libraries
2025-09-22 21:10:32,513:INFO:Set up data.
2025-09-22 21:10:32,515:INFO:Set up index.
2025-09-22 21:11:07,105:INFO:Initializing predict_model()
2025-09-22 21:11:07,105:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x307873d00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309520d30>)
2025-09-22 21:11:07,105:INFO:Checking exceptions
2025-09-22 21:11:07,105:INFO:Preloading libraries
2025-09-22 21:11:07,106:INFO:Set up data.
2025-09-22 21:11:07,110:INFO:Set up index.
2025-09-22 21:11:24,959:INFO:Initializing predict_model()
2025-09-22 21:11:24,959:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3094547f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30954c5e0>)
2025-09-22 21:11:24,959:INFO:Checking exceptions
2025-09-22 21:11:24,959:INFO:Preloading libraries
2025-09-22 21:11:24,959:INFO:Set up data.
2025-09-22 21:11:24,961:INFO:Set up index.
2025-09-22 21:12:54,794:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:12:54,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:12:54,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:12:54,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:12:55,352:INFO:Initializing load_model()
2025-09-22 21:12:55,352:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-22 21:12:55,379:WARNING:/opt/miniconda3/envs/insurance_app/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.1.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.1.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.23', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.5.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.14.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.9', 'machine': 'arm64'}}
  warnings.warn(

2025-09-22 21:12:55,804:INFO:Initializing predict_model()
2025-09-22 21:12:55,804:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16995db50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x169a3bb80>)
2025-09-22 21:12:55,804:INFO:Checking exceptions
2025-09-22 21:12:55,804:INFO:Preloading libraries
2025-09-22 21:12:55,804:INFO:Set up data.
2025-09-22 21:12:55,809:INFO:Set up index.
2025-09-22 21:12:55,897:INFO:Initializing predict_model()
2025-09-22 21:12:55,897:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16990bee0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16990d310>)
2025-09-22 21:12:55,897:INFO:Checking exceptions
2025-09-22 21:12:55,897:INFO:Preloading libraries
2025-09-22 21:12:55,898:INFO:Set up data.
2025-09-22 21:12:55,899:INFO:Set up index.
2025-09-22 21:13:09,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:13:09,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:13:09,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:13:09,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:13:09,846:INFO:Initializing load_model()
2025-09-22 21:13:09,846:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-22 21:13:09,877:WARNING:/opt/miniconda3/envs/insurance_app/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.1.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.1.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.23', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.5.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.14.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.9', 'machine': 'arm64'}}
  warnings.warn(

2025-09-22 21:13:10,278:INFO:Initializing predict_model()
2025-09-22 21:13:10,278:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1074b4a30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3093c05e0>)
2025-09-22 21:13:10,278:INFO:Checking exceptions
2025-09-22 21:13:10,278:INFO:Preloading libraries
2025-09-22 21:13:10,278:INFO:Set up data.
2025-09-22 21:13:10,281:INFO:Set up index.
2025-09-22 21:13:10,374:INFO:Initializing predict_model()
2025-09-22 21:13:10,374:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3094a6ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3093c05e0>)
2025-09-22 21:13:10,374:INFO:Checking exceptions
2025-09-22 21:13:10,374:INFO:Preloading libraries
2025-09-22 21:13:10,374:INFO:Set up data.
2025-09-22 21:13:10,376:INFO:Set up index.
2025-09-22 21:23:07,026:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:23:07,036:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:23:07,036:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:23:07,036:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:23:07,621:INFO:Initializing load_model()
2025-09-22 21:23:07,621:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-22 21:23:07,650:WARNING:/opt/miniconda3/envs/insurance_app/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.1.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.1.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.23', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.5.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.14.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.9', 'machine': 'arm64'}}
  warnings.warn(

2025-09-22 21:23:08,294:INFO:Initializing predict_model()
2025-09-22 21:23:08,294:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16504e7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x164f8a1f0>)
2025-09-22 21:23:08,294:INFO:Checking exceptions
2025-09-22 21:23:08,294:INFO:Preloading libraries
2025-09-22 21:23:08,295:INFO:Set up data.
2025-09-22 21:23:08,302:INFO:Set up index.
2025-09-22 21:23:08,397:INFO:Initializing predict_model()
2025-09-22 21:23:08,397:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x164f77ee0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x164f8a1f0>)
2025-09-22 21:23:08,397:INFO:Checking exceptions
2025-09-22 21:23:08,397:INFO:Preloading libraries
2025-09-22 21:23:08,398:INFO:Set up data.
2025-09-22 21:23:08,399:INFO:Set up index.
2025-09-22 21:23:23,700:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:23:23,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:23:23,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:23:23,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:23:24,266:INFO:Initializing load_model()
2025-09-22 21:23:24,266:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-22 21:23:24,298:WARNING:/opt/miniconda3/envs/insurance_app/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.1.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.1.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.23', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.5.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.14.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.9', 'machine': 'arm64'}}
  warnings.warn(

2025-09-22 21:23:24,666:INFO:Initializing predict_model()
2025-09-22 21:23:24,666:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309dafe20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309f083a0>)
2025-09-22 21:23:24,666:INFO:Checking exceptions
2025-09-22 21:23:24,666:INFO:Preloading libraries
2025-09-22 21:23:24,666:INFO:Set up data.
2025-09-22 21:23:24,670:INFO:Set up index.
2025-09-22 21:23:24,763:INFO:Initializing predict_model()
2025-09-22 21:23:24,763:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x309d25070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309f081f0>)
2025-09-22 21:23:24,763:INFO:Checking exceptions
2025-09-22 21:23:24,763:INFO:Preloading libraries
2025-09-22 21:23:24,763:INFO:Set up data.
2025-09-22 21:23:24,764:INFO:Set up index.
2025-09-22 21:25:43,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:25:43,910:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:25:43,910:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:25:43,910:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:25:44,373:INFO:Initializing load_model()
2025-09-22 21:25:44,373:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-22 21:25:44,442:WARNING:/opt/miniconda3/envs/insurance_app/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.1.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.1.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.23', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.5.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.14.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.9', 'machine': 'arm64'}}
  warnings.warn(

2025-09-22 21:25:44,822:INFO:Initializing predict_model()
2025-09-22 21:25:44,822:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x168cccf70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x168dc35e0>)
2025-09-22 21:25:44,822:INFO:Checking exceptions
2025-09-22 21:25:44,822:INFO:Preloading libraries
2025-09-22 21:25:44,823:INFO:Set up data.
2025-09-22 21:25:44,827:INFO:Set up index.
2025-09-22 21:25:44,915:INFO:Initializing predict_model()
2025-09-22 21:25:44,916:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x168c65f70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x168c53d30>)
2025-09-22 21:25:44,916:INFO:Checking exceptions
2025-09-22 21:25:44,916:INFO:Preloading libraries
2025-09-22 21:25:44,916:INFO:Set up data.
2025-09-22 21:25:44,917:INFO:Set up index.
2025-09-22 21:25:56,857:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:25:56,858:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:25:56,858:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:25:56,858:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:25:57,466:INFO:Initializing load_model()
2025-09-22 21:25:57,466:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-22 21:25:57,496:WARNING:/opt/miniconda3/envs/insurance_app/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.1.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.1.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.23', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.5.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.14.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.9', 'machine': 'arm64'}}
  warnings.warn(

2025-09-22 21:25:58,165:INFO:Initializing predict_model()
2025-09-22 21:25:58,165:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1083f5430>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30a26fee0>)
2025-09-22 21:25:58,165:INFO:Checking exceptions
2025-09-22 21:25:58,166:INFO:Preloading libraries
2025-09-22 21:25:58,166:INFO:Set up data.
2025-09-22 21:25:58,172:INFO:Set up index.
2025-09-22 21:25:58,267:INFO:Initializing predict_model()
2025-09-22 21:25:58,267:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x108206520>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30a26ff70>)
2025-09-22 21:25:58,267:INFO:Checking exceptions
2025-09-22 21:25:58,267:INFO:Preloading libraries
2025-09-22 21:25:58,267:INFO:Set up data.
2025-09-22 21:25:58,268:INFO:Set up index.
2025-09-22 21:28:08,135:INFO:Initializing predict_model()
2025-09-22 21:28:08,137:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30a28b250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30a4681f0>)
2025-09-22 21:28:08,137:INFO:Checking exceptions
2025-09-22 21:28:08,137:INFO:Preloading libraries
2025-09-22 21:28:08,137:INFO:Set up data.
2025-09-22 21:28:08,142:INFO:Set up index.
2025-09-22 21:28:08,265:INFO:Initializing predict_model()
2025-09-22 21:28:08,265:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30a46b5b0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30a468dc0>)
2025-09-22 21:28:08,265:INFO:Checking exceptions
2025-09-22 21:28:08,265:INFO:Preloading libraries
2025-09-22 21:28:08,265:INFO:Set up data.
2025-09-22 21:28:08,266:INFO:Set up index.
2025-09-22 21:29:48,425:INFO:Initializing predict_model()
2025-09-22 21:29:48,426:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16cc62c40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30c1418b0>)
2025-09-22 21:29:48,426:INFO:Checking exceptions
2025-09-22 21:29:48,426:INFO:Preloading libraries
2025-09-22 21:29:48,426:INFO:Set up data.
2025-09-22 21:29:48,429:INFO:Set up index.
2025-09-22 21:30:43,337:INFO:Initializing predict_model()
2025-09-22 21:30:43,337:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x30c155eb0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30a468a60>)
2025-09-22 21:30:43,337:INFO:Checking exceptions
2025-09-22 21:30:43,338:INFO:Preloading libraries
2025-09-22 21:30:43,339:INFO:Set up data.
2025-09-22 21:30:43,342:INFO:Set up index.
2025-09-22 21:31:09,645:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:31:09,646:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:31:09,646:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:31:09,646:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:31:10,160:INFO:Initializing load_model()
2025-09-22 21:31:10,160:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-22 21:31:10,188:WARNING:/opt/miniconda3/envs/insurance_app/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.1.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.1.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.23', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.5.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.14.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.9', 'machine': 'arm64'}}
  warnings.warn(

2025-09-22 21:31:10,814:INFO:Initializing predict_model()
2025-09-22 21:31:10,815:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x169748ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16973a9d0>)
2025-09-22 21:31:10,815:INFO:Checking exceptions
2025-09-22 21:31:10,815:INFO:Preloading libraries
2025-09-22 21:31:10,815:INFO:Set up data.
2025-09-22 21:31:10,819:INFO:Set up index.
2025-09-22 21:31:10,910:INFO:Initializing predict_model()
2025-09-22 21:31:10,910:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1696f7ee0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x16973a9d0>)
2025-09-22 21:31:10,910:INFO:Checking exceptions
2025-09-22 21:31:10,910:INFO:Preloading libraries
2025-09-22 21:31:10,910:INFO:Set up data.
2025-09-22 21:31:10,911:INFO:Set up index.
2025-09-22 21:31:24,158:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:31:24,159:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:31:24,159:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:31:24,159:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:31:24,758:INFO:Initializing load_model()
2025-09-22 21:31:24,758:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-22 21:31:24,790:WARNING:/opt/miniconda3/envs/insurance_app/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.1.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.1.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.23', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.5.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.14.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.9', 'machine': 'arm64'}}
  warnings.warn(

2025-09-22 21:31:25,158:INFO:Initializing predict_model()
2025-09-22 21:31:25,158:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3074feb80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307725310>)
2025-09-22 21:31:25,158:INFO:Checking exceptions
2025-09-22 21:31:25,158:INFO:Preloading libraries
2025-09-22 21:31:25,158:INFO:Set up data.
2025-09-22 21:31:25,162:INFO:Set up index.
2025-09-22 21:31:25,257:INFO:Initializing predict_model()
2025-09-22 21:31:25,257:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x307722fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3075da550>)
2025-09-22 21:31:25,257:INFO:Checking exceptions
2025-09-22 21:31:25,257:INFO:Preloading libraries
2025-09-22 21:31:25,257:INFO:Set up data.
2025-09-22 21:31:25,259:INFO:Set up index.
2025-09-22 21:32:42,932:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:32:42,933:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:32:42,933:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:32:42,933:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:32:43,401:INFO:Initializing load_model()
2025-09-22 21:32:43,401:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-22 21:32:43,425:WARNING:/opt/miniconda3/envs/insurance_app/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.1.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.1.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.23', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.5.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.14.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.9', 'machine': 'arm64'}}
  warnings.warn(

2025-09-22 21:32:43,850:INFO:Initializing predict_model()
2025-09-22 21:32:43,850:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17df3c970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17e06bd30>)
2025-09-22 21:32:43,850:INFO:Checking exceptions
2025-09-22 21:32:43,851:INFO:Preloading libraries
2025-09-22 21:32:43,851:INFO:Set up data.
2025-09-22 21:32:43,855:INFO:Set up index.
2025-09-22 21:32:43,942:INFO:Initializing predict_model()
2025-09-22 21:32:43,942:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x17de47ee0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17de49310>)
2025-09-22 21:32:43,942:INFO:Checking exceptions
2025-09-22 21:32:43,942:INFO:Preloading libraries
2025-09-22 21:32:43,942:INFO:Set up data.
2025-09-22 21:32:43,943:INFO:Set up index.
2025-09-22 21:32:56,678:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:32:56,679:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:32:56,679:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:32:56,679:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:32:57,243:INFO:Initializing load_model()
2025-09-22 21:32:57,243:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-22 21:32:57,278:WARNING:/opt/miniconda3/envs/insurance_app/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.1.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.1.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.23', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.5.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.14.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.9', 'machine': 'arm64'}}
  warnings.warn(

2025-09-22 21:32:57,651:INFO:Initializing predict_model()
2025-09-22 21:32:57,651:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x105b38df0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307c374c0>)
2025-09-22 21:32:57,651:INFO:Checking exceptions
2025-09-22 21:32:57,651:INFO:Preloading libraries
2025-09-22 21:32:57,651:INFO:Set up data.
2025-09-22 21:32:57,653:INFO:Set up index.
2025-09-22 21:32:57,742:INFO:Initializing predict_model()
2025-09-22 21:32:57,742:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x307e4afa0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307c37670>)
2025-09-22 21:32:57,742:INFO:Checking exceptions
2025-09-22 21:32:57,742:INFO:Preloading libraries
2025-09-22 21:32:57,742:INFO:Set up data.
2025-09-22 21:32:57,743:INFO:Set up index.
2025-09-22 21:35:42,910:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:35:42,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:35:42,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:35:42,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:35:43,475:INFO:Initializing load_model()
2025-09-22 21:35:43,475:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-22 21:35:43,502:WARNING:/opt/miniconda3/envs/insurance_app/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.1.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.1.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.23', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.5.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.14.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.9', 'machine': 'arm64'}}
  warnings.warn(

2025-09-22 21:35:43,869:INFO:Initializing predict_model()
2025-09-22 21:35:43,869:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1698dc670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1698cc8b0>)
2025-09-22 21:35:43,869:INFO:Checking exceptions
2025-09-22 21:35:43,869:INFO:Preloading libraries
2025-09-22 21:35:43,869:INFO:Set up data.
2025-09-22 21:35:43,872:INFO:Set up index.
2025-09-22 21:35:43,958:INFO:Initializing predict_model()
2025-09-22 21:35:43,959:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16979bee0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1697dfaf0>)
2025-09-22 21:35:43,959:INFO:Checking exceptions
2025-09-22 21:35:43,959:INFO:Preloading libraries
2025-09-22 21:35:43,959:INFO:Set up data.
2025-09-22 21:35:43,960:INFO:Set up index.
2025-09-22 21:35:57,197:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:35:57,197:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:35:57,198:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:35:57,198:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-22 21:35:57,751:INFO:Initializing load_model()
2025-09-22 21:35:57,751:INFO:load_model(model_name=best_final_model, platform=None, authentication=None, verbose=True)
2025-09-22 21:35:57,786:WARNING:/opt/miniconda3/envs/insurance_app/lib/python3.9/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.12.4', 'category_encoders': '2.6.4', 'lightgbm': '4.6.0', 'numba': '0.60.0', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.1.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.1.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.9.23', 'machine': 'arm64'}}
pickle: {'deps_info': {'pip': '25.2', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.5.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.14.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.5', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '6.3.0', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.9', 'machine': 'arm64'}}
  warnings.warn(

2025-09-22 21:35:58,166:INFO:Initializing predict_model()
2025-09-22 21:35:58,167:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3085e0cd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30529c430>)
2025-09-22 21:35:58,167:INFO:Checking exceptions
2025-09-22 21:35:58,167:INFO:Preloading libraries
2025-09-22 21:35:58,167:INFO:Set up data.
2025-09-22 21:35:58,169:INFO:Set up index.
2025-09-22 21:35:58,264:INFO:Initializing predict_model()
2025-09-22 21:35:58,264:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1036d01c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30529c4c0>)
2025-09-22 21:35:58,264:INFO:Checking exceptions
2025-09-22 21:35:58,264:INFO:Preloading libraries
2025-09-22 21:35:58,264:INFO:Set up data.
2025-09-22 21:35:58,265:INFO:Set up index.
2025-09-22 21:36:56,886:INFO:Initializing predict_model()
2025-09-22 21:36:56,887:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x3070dad60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x306bda160>)
2025-09-22 21:36:56,887:INFO:Checking exceptions
2025-09-22 21:36:56,887:INFO:Preloading libraries
2025-09-22 21:36:56,887:INFO:Set up data.
2025-09-22 21:36:56,890:INFO:Set up index.
2025-09-22 21:37:04,646:INFO:Initializing predict_model()
2025-09-22 21:37:04,646:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x306026910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3070a0310>)
2025-09-22 21:37:04,646:INFO:Checking exceptions
2025-09-22 21:37:04,646:INFO:Preloading libraries
2025-09-22 21:37:04,646:INFO:Set up data.
2025-09-22 21:37:04,648:INFO:Set up index.
